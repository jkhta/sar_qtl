B42_idry_dir_diff := 0
B42_idry_ind_sun := (d * k) + (d * g * l)
B42_idry_ind_shade := (D * K) + (D * G * L)
B42_idry_ind_diff := ((D * K) + (D * G * L)) - ((d * k) + (d * g * l))
#B5
#bd
B5_bd_dir_sun := b
B5_bd_dir_shade := B
B5_bd_dir_diff := B - b
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := e
B5_rdry_dir_shade := E
B5_rdry_dir_diff := E - e
B5_rdry_ind_sun := b * c
B5_rdry_ind_shade := B * C
B5_rdry_ind_diff := (B * C) - (b * c)
#h3h1
B5_h3h1_dir_sun := i
B5_h3h1_dir_shade := I
B5_h3h1_dir_diff := I - i
B5_h3h1_ind_sun := (b * f) + (b * c * g)
B5_h3h1_ind_shade := (B * F) + (B * C * G)
B5_h3h1_ind_diff := ((B * F) + (B * C * G)) - ((b * f) + (b * c * g))
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := (b * j) + (b * c * k) + (b * f * l) + (b * c * g * l) + (e * k) + (e * g * l) + (i * l)
B5_idry_ind_shade := (B * J) + (B * C * K) + (B * F * L) + (B * C * G * L) + (E * K) + (E * G * L) + (I * L)
B5_idry_ind_diff := ((B * J) + (B * C * K) + (B * F * L) + (B * C * G * L) + (E * K) + (E * G * L) + (I * L)) - ((b * j) + (b * c * k) + (b * f * l) + (b * c * g * l) + (e * k) + (e * g * l) + (i * l))
"
fit_best <- sem(m_best, data = ita_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
path_parameters_qtl_effects_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_sun[, i] <- tryCatch(subset(path_parameters_qtl_sun, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_sun) <- required_formula
path_parameters_qtl_effects_sun$env <- "Sun"
path_parameters_qtl_effects_sun$pop <- "ita"
path_parameters_qtl_shade <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_upper_case), ]
path_parameters_qtl_effects_shade <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_shade[, i] <- tryCatch(subset(path_parameters_qtl_shade, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_shade) <- required_formula
path_parameters_qtl_effects_shade$env <- "Shade"
path_parameters_qtl_effects_shade$pop <- "ita"
fwrite(path_parameters_qtl_effects_sun, "ita_qtl_eff_alt_sun.csv", sep = ",", row.names = FALSE, na = "NA")
fwrite(path_parameters_qtl_effects_shade, "ita_qtl_eff_alt_shade.csv", sep = ",", row.names = FALSE, na = "NA")
#path analysis on bur group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
cvi_data <- fread("cvi_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(cvi_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
cvi_data$treatment <- factor(cvi_data$treatment, levels = c("Sun", "Shade"))
head(cvi_data)
cvi_data[, c("A4", "A42", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
bd ~ c(a, A) * B42 + c(b, B) * B5
rdry ~ c(c, C) * bd
h3h1 ~ c(d, D) * bd + c(e, E) * rdry + c(f, F) * B42 + c(g, G) * B5
idry ~ c(h, H) * bd + c(i, I) * rdry + c(j, J) * h3h1
#B4
#bd
B4_bd_dir_sun := 0
B4_bd_dir_shade := 0
B4_bd_dir_diff := 0
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := 0
B4_rdry_ind_shade := 0
B4_rdry_ind_diff := 0
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := 0
B4_h3h1_ind_shade := 0
B4_h3h1_ind_diff := 0
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := 0
B4_idry_ind_shade := 0
B4_idry_ind_diff := 0
#B42
#bd
B42_bd_dir_sun := a
B42_bd_dir_shade := A
B42_bd_dir_diff := A - a
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := a * c
B42_rdry_ind_shade := A * C
B42_rdry_ind_diff := (A * C) - (a * c)
#h3h1
B42_h3h1_dir_sun := f
B42_h3h1_dir_shade := F
B42_h3h1_dir_diff := F - f
B42_h3h1_ind_sun := (a * d) + (a * c * e)
B42_h3h1_ind_shade := (A * D) + (A * C * E)
B42_h3h1_ind_diff := ((A * D) + (A * C * E)) - ((a * d) + (a * c * e))
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := (a * h) + (a * c * i) + (a * d * j) + (a * c * e * j) + (f * j)
B42_idry_ind_shade := (A * H) + (A * C * I) + (A * D * J) + (A * C * E * J) + (F * J)
B42_idry_ind_diff := ((A * H) + (A * C * I) + (A * D * J) + (A * C * E * J) + (F * J)) - ((a * h) + (a * c * i) + (a * d * j) + (a * c * e * j) + (f * j))
#B5
#bd
B5_bd_dir_sun := b
B5_bd_dir_shade := B
B5_bd_dir_diff := B - b
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := 0
B5_rdry_dir_shade := 0
B5_rdry_dir_diff := 0
B5_rdry_ind_sun := b * c
B5_rdry_ind_shade := B * C
B5_rdry_ind_diff := (B * C) - (b * c)
#h3h1
B5_h3h1_dir_sun := g
B5_h3h1_dir_shade := G
B5_h3h1_dir_diff := G - g
B5_h3h1_ind_sun := (b * d) + (b * c * e)
B5_h3h1_ind_shade := (B * D) + (B * C * E)
B5_h3h1_ind_diff := ((B * D) + (B * C * E)) - ((b * d) + (b * c * e))
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := (b * h) + (b * c * i) + (b * d * j) + (b * c * e * j) + (g * j)
B5_idry_ind_shade := (B * H) + (B * C * I) + (B * D * J) + (B * C * E * J) + (G * J)
B5_idry_ind_diff := ((B * H) + (B * C * I) + (B * D * J) + (B * C * E * J) + (G * J)) - ((b * h) + (b * c * i) + (b * d * j) + (b * c * e * j) + (g * j))
"
fit_best <- sem(m_best, data = cvi_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
path_parameters_qtl_effects_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_sun[, i] <- tryCatch(subset(path_parameters_qtl_sun, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_sun) <- required_formula
path_parameters_qtl_effects_sun$env <- "Sun"
path_parameters_qtl_effects_sun$pop <- "cvi"
path_parameters_qtl_shade <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_upper_case), ]
path_parameters_qtl_effects_shade <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_shade[, i] <- tryCatch(subset(path_parameters_qtl_shade, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_shade) <- required_formula
path_parameters_qtl_effects_shade$env <- "Shade"
path_parameters_qtl_effects_shade$pop <- "cvi"
fwrite(path_parameters_qtl_effects_sun, "cvi_qtl_eff_alt_sun.csv", sep = ",", row.names = FALSE, na = "NA")
fwrite(path_parameters_qtl_effects_shade, "cvi_qtl_eff_alt_shade.csv", sep = ",", row.names = FALSE, na = "NA")
#path analysis on bur group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
rm(list = ls())
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/7_path_analysis/output/")
bur_data <- fread("bur_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
bur_data <- fread("bur_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(bur_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
bur_data$treatment <- factor(bur_data$treatment, levels = c("Sun", "Shade"))
head(bur_data)
bur_data[, c("A4", "A42", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
bd ~ c(A, a) * B42
rdry ~ c(B, b) * bd + c(C, c) * B5
h3h1 ~ c(D, d) * bd + c(E, e) * rdry + c(F, f) * B5
idry ~ c(G, g)* bd + c(H, h) * rdry + c(I, i) * h3h1 + c(J, j) * B42 + c(K, k) * B5
#B4
#bd
B4_bd_dir_sun := 0
B4_bd_dir_shade := 0
B4_bd_dir_diff := 0
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := 0
B4_rdry_ind_shade := 0
B4_rdry_ind_diff := 0
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := 0
B4_h3h1_ind_shade := 0
B4_h3h1_ind_diff := 0
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := 0
B4_idry_ind_shade := 0
B4_idry_ind_diff := 0
#B42
#bd
B42_bd_dir_sun := a
B42_bd_dir_shade := A
B42_bd_dir_diff := A - a
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := a * b
B42_rdry_ind_shade := A * B
B42_rdry_ind_diff := (A * B) - (a * b)
#h3h1
B42_h3h1_dir_sun := 0
B42_h3h1_dir_shade := 0
B42_h3h1_dir_diff := 0
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := j
B42_idry_dir_shade := J
B42_idry_dir_diff := J - j
B42_idry_ind_sun := (a * g) + (a * b * h) + (a * d * i) + (a * b * e * i)
B42_idry_ind_shade := (A * G) + (A * B * H) + (A * D * I) + (A * B * E * I)
B42_idry_ind_diff := ((A * G) + (A * B * H) + (A * D * I) + (A * B * E * I)) - ((a * g) + (a * b * h) + (a * d * i) + (a * b * e * i))
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := c
B5_rdry_dir_shade := C
B5_rdry_dir_diff := C - c
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := f
B5_h3h1_dir_shade := F
B5_h3h1_dir_diff := F - f
B5_h3h1_ind_sun := c * e
B5_h3h1_ind_shade := C * E
B5_h3h1_ind_diff := (C * E) - (c * e)
#idry
B5_idry_dir_sun := k
B5_idry_dir_shade := K
B5_idry_dir_diff := K - k
B5_idry_ind_sun := (c * h) + (c * e * i) + (f * i)
B5_idry_ind_shade := (C * H) + (C * E * I) + (F * I)
B5_idry_ind_diff := ((C * H) + (C * E * I) + (F * I)) - ((c * h) + (c * e * i) + (f * i))
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
path_parameters_qtl_effects_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_sun[, i] <- tryCatch(subset(path_parameters_qtl_sun, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_sun) <- required_formula
path_parameters_qtl_effects_sun$env <- "Sun"
path_parameters_qtl_effects_sun$pop <- "bur"
path_parameters_qtl_shade <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_upper_case), ]
path_parameters_qtl_effects_shade <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_shade[, i] <- tryCatch(subset(path_parameters_qtl_shade, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_shade) <- required_formula
path_parameters_qtl_effects_shade$env <- "Shade"
path_parameters_qtl_effects_shade$pop <- "bur"
path_parameters_qtl_effects_shade
path_parameters_qtl_effects_sun
fwrite(path_parameters_qtl_effects_sun, "bur_qtl_eff_alt_sun.csv", sep = ",", row.names = FALSE, na = "NA")
fwrite(path_parameters_qtl_effects_shade, "bur_qtl_eff_alt_shade.csv", sep = ",", row.names = FALSE, na = "NA")
#path analysis on blh group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
rm(list = ls())
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/7_path_analysis/output/")
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
blh_data <- fread("blh_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(blh_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
blh_data$treatment <- factor(blh_data$treatment, levels = c("Sun", "Shade"))
head(blh_data)
blh_data[, c("A4", "A42", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
bd ~ c(a, A) * B4
rdry ~ c(b, B) * bd + c(c, C) * B4 + c(d, D) * B5
h3h1 ~ c(e, E) * bd + c(f, F) * B5
idry ~ c(g, G) * bd + c(h, H) * rdry + c(i, I) * h3h1 + c(j, J) * B4
#B4
#bd
B4_bd_dir_sun := a
B4_bd_dir_shade := A
B4_bd_dir_diff := A - a
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := c
B4_rdry_dir_shade := C
B4_rdry_dir_diff := C - c
B4_rdry_ind_sun := a * b
B4_rdry_ind_shade := A * B
B4_rdry_ind_diff := (A * B) - (a * b)
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := a * e
B4_h3h1_ind_shade := A * E
B4_h3h1_ind_diff := (A * E) - (a * e)
#idry
B4_idry_dir_sun := j
B4_idry_dir_shade := J
B4_idry_dir_diff := J - j
B4_idry_ind_sun := (a * g) + (a * b * h) + (c * h)
B4_idry_ind_shade := (A * G) + (A * B * H) + (C * H)
B4_idry_ind_diff := ((A * G) + (A * B * H) + (C * H)) - ((a * g) + (a * b * h) + (c * h))
#B42
#bd
B42_bd_dir_sun := 0
B42_bd_dir_shade := 0
B42_bd_dir_diff := 0
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := 0
B42_rdry_ind_shade := 0
B42_rdry_ind_diff := 0
#h3h1
B42_h3h1_dir_sun := 0
B42_h3h1_dir_shade := 0
B42_h3h1_dir_diff := 0
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := 0
B42_idry_ind_shade := 0
B42_idry_ind_diff := 0
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := d
B5_rdry_dir_shade := D
B5_rdry_dir_diff := D - d
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := f
B5_h3h1_dir_shade := F
B5_h3h1_dir_diff := F - f
B5_h3h1_ind_sun := 0
B5_h3h1_ind_shade := 0
B5_h3h1_ind_diff := 0
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := (d * h) + (f * i)
B5_idry_ind_shade := (D * H) + (F * I)
B5_idry_ind_diff := ((D * H) + (F * I)) - ((d * h) + (f * i))
"
fit_best <- sem(m_best, data = blh_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
path_parameters_qtl_effects_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_sun[, i] <- tryCatch(subset(path_parameters_qtl_sun, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_sun) <- required_formula
path_parameters_qtl_effects_sun$env <- "Sun"
path_parameters_qtl_effects_sun$pop <- "blh"
path_parameters_qtl_shade <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_upper_case), ]
path_parameters_qtl_effects_shade <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_shade[, i] <- tryCatch(subset(path_parameters_qtl_shade, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_shade) <- required_formula
path_parameters_qtl_effects_shade$env <- "Shade"
path_parameters_qtl_effects_shade$pop <- "blh"
fwrite(path_parameters_qtl_effects_sun, "blh_qtl_eff_alt_sun.csv", sep = ",", row.names = FALSE, na = "NA")
fwrite(path_parameters_qtl_effects_shade, "blh_qtl_eff_alt_shade.csv", sep = ",", row.names = FALSE, na = "NA")
#this script will average the qtl effects and traits across populations
library(data.table)
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
rm(list = ls())
list.files()
pop_qtl_eff_list_sun <- rbindlist(lapply(list.files(pattern = "qtl_eff_alt_sun.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
pop_qtl_eff_list_sun
pop_qtl_eff_list_sun[is.na(pop_qtl_eff_list_sun)] <- 0
pop_qtl_eff_list_sun
pop_qtl_eff_list_shade <- rbindlist(lapply(list.files(pattern = "qtl_eff_alt_shade.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
pop_qtl_eff_list_shade[is.na(pop_qtl_eff_list_shade)] <- 0
pop_qtl_eff_list_shade
pop_qtl_eff_list_sun_avg[, grepl("~", colnames(pop_qtl_eff_list_sun))] <- apply(pop_qtl_eff_list_sun_avg[, grepl("~", colnames(pop_qtl_eff_list_sun))], 2, function(x) mean(x))
pop_qtl_eff_list_sun_avg <- apply(pop_qtl_eff_list_sun_avg[, grepl("~", colnames(pop_qtl_eff_list_sun))], 2, function(x) mean(x))
pop_qtl_eff_list_sun_avg <- apply(pop_qtl_eff_list_sun[, grepl("~", colnames(pop_qtl_eff_list_sun))], 2, function(x) mean(x))
pop_qtl_eff_list_sun[, grepl("~", colnames(pop_qtl_eff_list_sun))]
grepl("~", colnames(pop_qtl_eff_list_sun))
pop_qtl_eff_list_sun_avg <- apply(pop_qtl_eff_list_sun[,..grepl("~", colnames(pop_qtl_eff_list_sun))], 2, function(x) mean(x))
pop_qtl_eff_list_sun <- as.data.frame(rbindlist(lapply(list.files(pattern = "qtl_eff_alt_sun.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))))
pop_qtl_eff_list_sun
pop_qtl_eff_list_sun[is.na(pop_qtl_eff_list_sun)] <- 0
pop_qtl_eff_list_sun_avg <- apply(pop_qtl_eff_list_sun[,grepl("~", colnames(pop_qtl_eff_list_sun))], 2, function(x) mean(x))
pop_qtl_eff_list_sun_avg
pop_qtl_eff_list_shade <- as.data.frame(rbindlist(lapply(list.files(pattern = "qtl_eff_alt_shade.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))))
pop_qtl_eff_list_shade_avg <- apply(pop_qtl_eff_list_shade[,grepl("~", colnames(pop_qtl_eff_list_shade))], 2, function(x) mean(x))
pop_qtl_eff_list_shade_avg
pop_qtl_eff_list_shade
pop_qtl_eff_list_shade[is.na(pop_qtl_eff_list_shade)] <- 0
pop_qtl_eff_list_shade
pop_qtl_eff_list_shade_avg <- apply(pop_qtl_eff_list_shade[,grepl("~", colnames(pop_qtl_eff_list_shade))], 2, function(x) mean(x))
pop_qtl_eff_list_shade_avg
pop_qtl_eff_list_sun
pop_qtl_eff_list_sun_avg
list.files()
pop_trait_eff_list_sun <- as.data.frame(rbindlist(lapply(list.files(pattern = "trait_eff_alt_sun.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))))
pop_trait_eff_list_sun
pop_trait_eff_list_sun[is.na(pop_trait_eff_list_sun)] <- 0
pop_trait_eff_list_sun_avg <- apply(pop_trait_eff_list_sun[,grepl("~", colnames(pop_trait_eff_list_sun))], 2, function(x) mean(x))
pop_trait_eff_list_sun_avg
pop_qtl_eff_list_sun
pop_qtl_eff_list_sun_avg
pop_trait_eff_list_shade <- as.data.frame(rbindlist(lapply(list.files(pattern = "trait_eff_alt_shade.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))))
pop_trait_eff_list_shade[is.na(pop_trait_eff_list_shade)] <- 0
pop_trait_eff_list_shade_avg <- apply(pop_trait_eff_list_shade[,grepl("~", colnames(pop_trait_eff_list_shade))], 2, function(x) mean(x))
pop_trait_eff_list_shade_avg
pop_trait_eff_list_sun_avg
pop_qtl_eff_list_sun_avg
pop_trait_eff_list_sun_avg
