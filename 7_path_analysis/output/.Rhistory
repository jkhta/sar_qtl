bd ~ B4 + B5
rdry ~ bd + B4
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B4 + B5
"
fit_best <- sem(m_best, data = sha_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4 + B5
rdry ~ bd + B4
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B5
"
fit_best <- sem(m_best, data = sha_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4 + B5
rdry ~ bd + B4
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1
"
fit_best <- sem(m_best, data = sha_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ c(a, A) * B4 + c(b, B) * B5
rdry ~ c(c, C) * bd + c(d, D) * B4
h3h1 ~ c(e, E) * bd + c(f, F) * rdry + c(g, G) * B5
idry ~ c(h, H) * bd + c(i, I) * rdry + c(j, J) * h3h1
"
fit_best <- sem(m_best, data = sha_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
m_best <- "
bd ~ c(a, A) * B4 + c(b, B) * B5
rdry ~ c(c, C) * bd + c(d, D) * B4
h3h1 ~ c(e, E) * bd + c(f, F) * rdry + c(g, G) * B5
idry ~ c(h, H) * bd + c(i, I) * rdry + c(j, J) * h3h1
#B4
#bd
B4_bd_dir_sun := a
B4_bd_dir_shade := A
B4_bd_dir_diff := A - a
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := d
B4_rdry_dir_shade := D
B4_rdry_dir_diff := D - d
B4_rdry_ind_sun := a * c
B4_rdry_ind_shade := A * C
B4_rdry_ind_diff := (A * C) - (a * c)
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := (a * e) + (a * c * f) + (d * f)
B4_h3h1_ind_shade := (A * E) + (A * C * F) + (D * F)
B4_h3h1_ind_diff := ((A * E) + (A * C * F) + (D * F)) - ((a * e) + (a * c * f) + (d * f))
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := (a * h) + (a * c * i) + (a * e * j) + (a * c * f * j) + (d * i) + (d * f * j)
B4_idry_ind_shade := (A * H) + (A * C * I) + (A * E * J) + (A * C * F * J) + (D * I) + (D * F * J)
B4_idry_ind_diff := ((A * H) + (A * C * I) + (A * E * J) + (A * C * F * J) + (D * I) + (D * F * J)) - ((a * h) + (a * c * i) + (a * e * j) + (a * c * f * j) + (d * i) + (d * f * j))
#B5
#bd
B5_bd_dir_sun := b
B5_bd_dir_shade := B
B5_bd_dir_diff := B - b
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := 0
B5_rdry_dir_shade := 0
B5_rdry_dir_diff := 0
B5_rdry_ind_sun := b * c
B5_rdry_ind_shade := B * C
B5_rdry_ind_diff := (B * C) - (b * c)
#h3h1
B5_h3h1_dir_sun := g
B5_h3h1_dir_shade := G
B5_h3h1_dir_diff := G - g
B5_h3h1_ind_sun := (b * e) + (b * c * f)
B5_h3h1_ind_shade := (B * E) + (B * C * F)
B5_h3h1_ind_diff := ((B * E) + (B * C * F)) - ((b * e) + (b * c * f))
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := (b * h) + (b * c * i) + (b * e * j) + (b * c * f * j) + (g * j)
B5_idry_ind_shade := (B * H) + (B * C * I) + (B * E * J) + (B * C * F * J) + (G * J)
B5_idry_ind_diff := ((B * H) + (B * C * I) + (B * E * J) + (B * C * F * J) + (G * J)) - ((b * h) + (b * c * i) + (b * e * j) + (b * c * f * j) + (g * j))
"
fit_best <- sem(m_best, data = sha_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_eff <- subset(path_parameters, grepl("sun|shade|diff", lhs))
path_parameters_eff$allele_comb <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[1])
path_parameters_eff$trait <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[2])
path_parameters_eff$effect_type <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[3])
path_parameters_eff$env <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[4])
nrow(path_parameters_eff)
path_parameters_eff$pop <- "sha"
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
fwrite(path_parameters_eff, "sha_path_eff_alt.csv", sep = ",", row.names = FALSE)
#path analysis on bur group
library(data.table)
library(lavaan)
library(semPlot)
rm(list = ls())
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
bur_data <- fread("bur_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(bur_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
bur_data$treatment <- factor(bur_data$treatment, levels = c("Sun", "Shade"))
head(bur_data)
bur_data[, c("A4", "A5", "AA", "AB", "BA", "BB")] <- NULL
head(bur_data)
m_best <- "
bd ~ B4 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4 + B5
rdry ~ bd + B4 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B4 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ bd + B4 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ bd + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ bd + B5
h3h1 ~ bd + rdry + B4 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B4 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
m_best <- "
rdry ~ c(A, a) * bd + c(B, b) * B5
h3h1 ~ c(C, c) * bd + c(D, d) * rdry + c(E, e) * B5
idry ~ c(F, f) * bd + c(G, g) * rdry + c(H, h) * h3h1 + c(I, i) * B5
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
#path analysis on bur group
library(data.table)
library(lavaan)
library(semPlot)
rm(list = ls())
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
bur_data <- fread("bur_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(bur_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
bur_data$treatment <- factor(bur_data$treatment, levels = c("Sun", "Shade"))
head(bur_data)
bur_data[, c("A4", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
rdry ~ c(A, a) * bd + c(B, b) * B5
h3h1 ~ c(C, c) * bd + c(D, d) * rdry + c(E, e) * B5
idry ~ c(F, f) * bd + c(G, g) * rdry + c(H, h) * h3h1 + c(I, i) * B5
#B4
#bd
B4_bd_dir_sun := 0
B4_bd_dir_shade := 0
B4_bd_dir_diff := 0
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := 0
B4_rdry_ind_shade := 0
B4_rdry_ind_diff := 0
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := 0
B4_h3h1_ind_shade := 0
B4_h3h1_ind_diff := 0
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := 0
B4_idry_ind_shade := 0
B4_idry_ind_diff := 0
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := b
B5_rdry_dir_shade := B
B5_rdry_dir_diff := B - b
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := e
B5_h3h1_dir_shade := E
B5_h3h1_dir_diff := E - e
B5_h3h1_ind_sun := b * d
B5_h3h1_ind_shade := B * D
B5_h3h1_ind_diff := (B * D) - (b * d)
#idry
B5_idry_dir_sun := i
B5_idry_dir_shade := I
B5_idry_dir_diff := I - i
B5_idry_ind_sun := (b * g) + (b * d * h) + (e * h)
B5_idry_ind_shade := (B * G) + (B * D * H) + (E * H)
B5_idry_ind_diff := ((B * G) + (B * D * H) + (E * H)) - ((b * g) + (b * d * h) + (e * h))
"
fit_best <- sem(m_best, data = bur_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
e
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_eff <- subset(path_parameters, grepl("sun|shade|diff", lhs))
path_parameters_eff$allele_comb <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[1])
path_parameters_eff$trait <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[2])
path_parameters_eff$effect_type <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[3])
path_parameters_eff$env <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[4])
nrow(path_parameters_eff)
path_parameters_eff$pop <- "bur"
path_parameters_eff
nrow(path_parameters_eff)
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
fwrite(path_parameters_eff, "bur_path_eff_alt.csv", sep = ",", row.names = FALSE)
#script to merge and plot direct and indirect effects
library(data.table)
library(ggplot2)
rm(list = ls())
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
path_data <- rbindlist(lapply(list.files(pattern = "path_eff_FRIFLC.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data$pop_facet <- factor(path_data$pop, levels = c("sha", "oy", "jea", "ita", "cvi", "bur", "blh"))
path_data$trait_facet <- factor(path_data$trait, levels = c("bd", "rdry", "h3h1", "idry"))
head(path_data)
path_data_FRI_FLC <- subset(path_data, allele_comb == "FRIFLC"
path_data_FRI_FLC <- subset(path_data, allele_comb == "FRIFLC")
head(path_data_FRI_FLC)
for (i in unique(path_data_FRI_FLC$env)) {
path_data_allele_subset <- subset(path_data_FRI_FLC, env == i)
ggplot(data = path_data_allele_subset, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point() +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.1) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.y = element_text(size = 20)) +
ggtitle(i)
ggsave(paste(i, "FRI_FLC_path_effects.png", sep = "_"), width = 6, height = 4, units = "in")
}
path_data_FRI_FLC
#path analysis on sha group
library(data.table)
library(lavaan)
library(semPlot)
rm(list = ls())
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
sha_data <-fread("sha_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(sha_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
sha_data$treatment <- factor(sha_data$treatment, levels = c("Sun", "Shade"))
head(sha_data)
sha_data[, c("A4", "B4", "A5", "B5", "AA", "AB", "BB")] <- NULL
m_best <- "
bd ~ c(a, A) * BA
rdry ~ c(b, B) * bd + c(c, C) * BA
h3h1 ~ c(d, D) * bd + c(e, E) * rdry + c(f, F) * BA
idry ~ c(g, G) * bd + c(h, H) * rdry + c(i, I) * h3h1
#FRIFLC
#bd
FRIFLC_bd_dir_sun := a
FRIFLC_bd_dir_shade := A
FRIFLC_bd_dir_diff := A - a
FRIFLC_bd_ind_sun := 0
FRIFLC_bd_ind_shade := 0
FRIFLC_bd_ind_diff := 0
#rdry
FRIFLC_rdry_dir_sun := c
FRIFLC_rdry_dir_shade := C
FRIFLC_rdry_dir_diff := C - c
FRIFLC_rdry_ind_sun := a * b
FRIFLC_rdry_ind_shade := A * B
FRIFLC_rdry_ind_diff := (A * B) - (a * b)
#h3h1
FRIFLC_h3h1_dir_sun := f
FRIFLC_h3h1_dir_shade := F
FRIFLC_h3h1_dir_diff := F - f
FRIFLC_h3h1_ind_sun := (a * d) + (a * b * e) + (c * e)
FRIFLC_h3h1_ind_shade := (A * D) + (A * B * E) + (C * E)
FRIFLC_h3h1_ind_diff := ((A * D) + (A * B * E) + (C * E)) - ((a * d) + (a * b * e) + (c * e))
#idry
FRIFLC_idry_dir_sun := 0
FRIFLC_idry_dir_shade := 0
FRIFLC_idry_dir_diff := 0
FRIFLC_idry_ind_sun := (a * g) + (a * b * h) + (a * d * i) + (a * b * e * i) + (c * h) + (c * e * i) + (f * i)
FRIFLC_idry_ind_shade := (A * G) + (A * B * H) + (A * D * I) + (A * B * E * I) + (C * H) + (C * E * I) + (F * I)
FRIFLC_idry_ind_diff := ((A * G) + (A * B * H) + (A * D * I) + (A * B * E * I) + (C * H) + (C * E * I) + (F * I)) - ((a * g) + (a * b * h) + (a * d * i) + (a * b * e * i) + (c * h) + (c * e * i) + (f * i))
"
fit_best <- sem(m_best, data = sha_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_eff <- subset(path_parameters, grepl("sun|shade|diff", lhs))
path_parameters_eff$allele_comb <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[1])
path_parameters_eff$trait <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[2])
path_parameters_eff$effect_type <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[3])
path_parameters_eff$env <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[4])
nrow(path_parameters_eff)
path_parameters_eff$pop <- "sha"
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
fwrite(path_parameters_eff, "sha_path_eff_FRIFLC.csv", sep = ",", row.names = FALSE)
#script to merge and plot direct and indirect effects
library(data.table)
library(ggplot2)
rm(list = ls())
setwd("/Users/jkhta/Desktop/nam_cam_fixing/34 - pop_path_analysis/output/")
path_data <- rbindlist(lapply(list.files(pattern = "path_eff_FRIFLC.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data$pop_facet <- factor(path_data$pop, levels = c("sha", "oy", "jea", "ita", "cvi", "bur", "blh"))
path_data$trait_facet <- factor(path_data$trait, levels = c("bd", "rdry", "h3h1", "idry"))
path_data_FRI_FLC <- subset(path_data, allele_comb == "FRIFLC")
for (i in unique(path_data_FRI_FLC$env)) {
path_data_allele_subset <- subset(path_data_FRI_FLC, env == i)
ggplot(data = path_data_allele_subset, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point() +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.1) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.y = element_text(size = 20)) +
ggtitle(i)
ggsave(paste(i, "FRI_FLC_path_effects.png", sep = "_"), width = 6, height = 4, units = "in")
}
head(path_data)
#looking at fri and flc individually
path_data_FRI_FLC_ind <- subset(path_data, grepl("B4|B5", allele_comb))
path_data
#looking at fri and flc individually
path_data_FRI_FLC_ind <- rbindlist(lapply(list.files(pattern = "path_eff_alt.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data_FRI_FLC_ind
for (i in unique(path_data_FRI_FLC_ind$env)) {
path_data_allele_subset <- subset(path_data_FRI_FLC_ind, env == i)
ggplot(data = path_data_allele_subset, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point() +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.1) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.y = element_text(size = 20)) +
ggtitle(i)
ggsave(paste(i, "FRI_FLC_ind_path_effects.png", sep = "_"), width = 6, height = 4, units = "in")
}
#looking at fri and flc individually
path_data_FRI_FLC_ind <- rbindlist(lapply(list.files(pattern = "path_eff_alt.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data_FRI_FLC_ind$pop_facet <- factor(path_data_FRI_FLC_ind$pop, levels = c("sha", "oy", "jea", "ita", "cvi", "bur", "blh"))
path_data_FRI_FLC_ind$trait_facet <- factor(path_data_FRI_FLC_ind$trait, levels = c("bd", "rdry", "h3h1", "idry"))
for (i in unique(path_data_FRI_FLC_ind$env)) {
path_data_allele_subset <- subset(path_data_FRI_FLC_ind, env == i)
ggplot(data = path_data_allele_subset, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point() +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.1) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.y = element_text(size = 20)) +
ggtitle(i)
ggsave(paste(i, "FRI_FLC_ind_path_effects.png", sep = "_"), width = 6, height = 4, units = "in")
}
unique(path_data_FRI_FLC_ind$allele_comb)
for (i in unique(path_data_FRI_FLC_ind$env)) {
for (j in unique(path_data_FRI_FLC_ind$allele_comb)) {
path_data_allele_subset <- subset(path_data_FRI_FLC_ind, env == i & allele_comb == j)
ggplot(data = path_data_allele_subset, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point() +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.1) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.y = element_text(size = 20)) +
ggtitle(i)
ggsave(paste(i, j, "FRI_FLC_ind_path_effects.png", sep = "_"), width = 6, height = 4, units = "in")
}
}
