sink()
library(qtl)
library(data.table)
#this file will generate a mapchart output using the GridLMM output
rm(list = ls())
#reading in the nam marker information
setwd("/Users/James/Documents/GitHub/sar_qtl/6_push_button/")
nam_markers <- fread("nam_marker_info_final.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
colnames(nam_markers) <- c("marker", "chr", "pos")
nam_markers$marker <- paste("m", nam_markers$marker, sep = "_")
trait_type <- "covariate"
#reading in an example trait 95% CI using lme4qtl
setwd(paste("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_ci_linkage_map/", trait_type, "/", sep = ""))
phenotype_ci_list <- lapply(list.files(pattern = "gxe"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
phenotype_names <- sapply(strsplit(list.files(pattern = "gxe"), split = "_gxe"), function(x) x[1])
phenotype_names <- gsub("_", "", phenotype_names)
names(phenotype_ci_list) <- phenotype_names
for (i in 1:length(phenotype_ci_list)) {
single_phenotype <- phenotype_ci_list[[i]]
single_phenotype$phenotype_name <- phenotype_names[i]
single_phenotype$color <- i
single_phenotype$qtl_no <- 1:nrow(single_phenotype)
phenotype_ci_list[[i]] <- single_phenotype
}
phenotype_ci_dt <- rbindlist(phenotype_ci_list)
phenotype_ci_dt$chr <- sapply(strsplit(phenotype_ci_dt$qtl, split = "_"), function(x) x[2])
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_ci_linkage_map/")
sink("GridLMM_gxe_cov_cis.mct")
for (i in 1:5) {
chr_markers <- subset(nam_markers, chr == i)
cat(sprintf("group %s \n \n", i))
for (j in 1:nrow(chr_markers)) {
#grabbing an individual marker at time
chr_single_marker <- chr_markers[j, ]
chr_single_marker_id <- chr_single_marker$marker
chr_single_marker_pos <- chr_single_marker$pos
cat(sprintf('"" %s \n', chr_single_marker_pos))
}
chr_qtls <- subset(phenotype_ci_dt, chr == i)
if (nrow(chr_qtls) > 0) {
cat("\n")
cat("qtls ;\n")
#adding individual qtl information
#grab each qtl at a time and send it to the text file
for (j in 1:nrow(chr_qtls)) {
#grabbing all of the qtl information needed
chr_single_qtl <- chr_qtls[j, ]
chr_single_phenotype_name <- chr_single_qtl$phenotype_name
chr_single_qtl_start_pos <- unlist(subset(chr_markers, marker == chr_single_qtl$left_bound, select = pos))
chr_single_qtl_end_pos <- unlist(subset(chr_markers, marker == chr_single_qtl$right_bound, select = pos))
chr_single_qtl_color <- chr_single_qtl$color
#now need to print all of the information for the qtl
#the order is qtl name, start start start end color
cat(sprintf("%s %s %s %s %s B C%s\n \n",
chr_single_phenotype_name,
chr_single_qtl_start_pos,
chr_single_qtl_start_pos,
chr_single_qtl_start_pos,
chr_single_qtl_end_pos,
chr_single_qtl_color))
}
} else if (nrow(chr_qtls) < 1) {
next
}
}
sink()
library(ggpubr)
library(png)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_ci_linkage_map/")
bd_geno_no_cov <- readPNG("gxe_qtl_linkage_no_cov_rotated.png")
bd_geno_cov <- readPNG("gxe_qtl_linkage_cov_rotated.png")
im_A <- ggplot() +
background_image(bd_geno_no_cov) +
# This ensures that the image leaves some space at the edges
theme(plot.margin = margin(t=1, l=1, r=1, b=1, unit = "cm"),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"))
im_B <- ggplot() + background_image(bd_geno_cov) +
theme(plot.margin = margin(t=1, l=1, r=1, b=1, unit = "cm"),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"))
ggarrange(im_A, im_B,
labels = c("A", "B"),
ncol = 2)
ggsave("gxe_qtl_linkage_no_cov_vs_cov_compared.png", device = "png", height = 8, width = 15, bg = "transparent")
#path analysis on oy group
library(data.table)
library(lavaan)
library(semPlot)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
oy_data <-fread("oy_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(oy_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
oy_data$treatment <- factor(oy_data$treatment, levels = c("Sun", "Shade"))
head(oy_data)
oy_data[, c("A4", "A42", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
rdry ~ c(a, A) * bd
h3h1 ~ c(b, B) * rdry + c(c, C) * B42
idry ~ c(d, D) * rdry + c(e, E) * h3h1
#B4
#bd
B4_bd_dir_sun := 0
B4_bd_dir_shade := 0
B4_bd_dir_diff := 0
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := 0
B4_rdry_ind_shade := 0
B4_rdry_ind_diff := 0
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := 0
B4_h3h1_ind_shade := 0
B4_h3h1_ind_diff := 0
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := 0
B4_idry_ind_shade := 0
B4_idry_ind_diff := 0
#B42
#bd
B42_bd_dir_sun := 0
B42_bd_dir_shade := 0
B42_bd_dir_diff := 0
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := 0
B42_rdry_ind_shade := 0
B42_rdry_ind_diff := 0
#h3h1
B42_h3h1_dir_sun := c
B42_h3h1_dir_shade := C
B42_h3h1_dir_diff := C - c
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := c * e
B42_idry_ind_shade := C * E
B42_idry_ind_diff := (C * E) - (c * e)
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := 0
B5_rdry_dir_shade := 0
B5_rdry_dir_diff := 0
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := 0
B5_h3h1_dir_shade := 0
B5_h3h1_dir_diff := 0
B5_h3h1_ind_sun := 0
B5_h3h1_ind_shade := 0
B5_h3h1_ind_diff := 0
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := 0
B5_idry_ind_shade := 0
B5_idry_ind_diff := 0
"
fit_best <- sem(m_best, data = oy_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
path_parameters_qtl_sun_sun <- data.frame(matrix(ncol = length(required_formula)))
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
path_parameters_qtl_sun_sun <- data.frame(matrix(ncol = length(required_formula)))
path_parameters_qtl_sun_sun
path_parameters_qtl_sun <- data.frame(matrix(ncol = length(required_formula)))
path_parameters_qtl_effects_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_sun[, i] <- tryCatch(subset(path_parameters_qtl_sun, formula == required_formula[i])$est, error = NA)
}
path_parameters_qtl_effects_sun
subset(path_parameters_qtl_sun, formula == required_formula[i]
)
path_parameters_qtl_sun
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
install.packages("lettercase")
library(lettercase)
#path analysis on oy group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
oy_data <-fread("oy_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(oy_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
oy_data$treatment <- factor(oy_data$treatment, levels = c("Sun", "Shade"))
head(oy_data)
oy_data[, c("A4", "A42", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
rdry ~ c(a, A) * bd
h3h1 ~ c(b, B) * rdry + c(c, C) * B42
idry ~ c(d, D) * rdry + c(e, E) * h3h1
#B4
#bd
B4_bd_dir_sun := 0
B4_bd_dir_shade := 0
B4_bd_dir_diff := 0
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := 0
B4_rdry_ind_shade := 0
B4_rdry_ind_diff := 0
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := 0
B4_h3h1_ind_shade := 0
B4_h3h1_ind_diff := 0
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := 0
B4_idry_ind_shade := 0
B4_idry_ind_diff := 0
#B42
#bd
B42_bd_dir_sun := 0
B42_bd_dir_shade := 0
B42_bd_dir_diff := 0
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := 0
B42_rdry_ind_shade := 0
B42_rdry_ind_diff := 0
#h3h1
B42_h3h1_dir_sun := c
B42_h3h1_dir_shade := C
B42_h3h1_dir_diff := C - c
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := c * e
B42_idry_ind_shade := C * E
B42_idry_ind_diff := (C * E) - (c * e)
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := 0
B5_rdry_dir_shade := 0
B5_rdry_dir_diff := 0
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := 0
B5_h3h1_dir_shade := 0
B5_h3h1_dir_diff := 0
B5_h3h1_ind_sun := 0
B5_h3h1_ind_shade := 0
B5_h3h1_ind_diff := 0
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := 0
B5_idry_ind_shade := 0
B5_idry_ind_diff := 0
"
fit_best <- sem(m_best, data = oy_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
path_parameters <- parameterestimates(fit_best, standardized = TRUE)
path_parameters_qtl <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("B4", "B42", "B5") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_qtl$formula <- with(path_parameters_qtl, paste(lhs, op, rhs, sep = " "))
path_parameters_qtl_sun <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_lower_case), ]
required_formula <- c("bd ~ B4", "bd ~ B42", "bd ~ B5", "rdry ~ B4", "rdry ~ B42", "rdry ~ B5", "h3h1 ~ B4", "h3h1 ~ B42", "h3h1 ~ B5", "idry ~ B4", "idry ~ B42", "idry ~ B5")
path_parameters_qtl_effects_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_sun[, i] <- tryCatch(subset(path_parameters_qtl_sun, formula == required_formula[i])$est, error = NA)
}
path_parameters_qtl_effects_sun
path_parameters_qtl_sun
colnames(path_trait_correlations_sun) <- required_formula
path_parameters_qtl_shade <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_upper_case), ]
path_parameters_qtl_effects_shade <- data.frame(matrix(ncol = length(required_formula)))
path_parameters_qtl_shade <- path_parameters_qtl[str_is(path_parameters_qtl$label, str_upper_case), ]
path_parameters_qtl_shade
path_parameters_qtl_effects_shade <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_parameters_qtl_effects_shade[, i] <- tryCatch(subset(path_parameters_qtl_shade, formula == required_formula[i])$est, error = NA)
}
colnames(path_parameters_qtl_effects_shade) <- required_formula
path_parameters_qtl_effects_shade$env <- "Shade"
path_parameters_qtl_effects_shade$pop <- "oy"
path_parameters_qtl_effects_shade
path_parameters_trait <- subset(path_parameters, lhs %in% c("bd", "rdry", "h3h1", "idry") & rhs %in% c("bd", "rdry", "h3h1", "idry") & !grepl("~~", op), select = c(lhs, op, rhs, group, est, label))
path_parameters_trait$formula <- with(path_parameters_trait, paste(lhs, op, rhs, sep = " "))
path_parameters_trait_sun <- path_parameters_trait[str_is(path_parameters_trait$label, str_lower_case), ]
required_formula <- c("rdry ~ bd", "h3h1 ~ bd", "h3h1 ~ rdry", "idry ~ bd", "idry ~ rdry", "idry ~ h3h1")
path_trait_correlations_sun <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_trait_correlations_sun[, i] <- tryCatch(subset(path_parameters_trait_sun, formula == required_formula[i])$est, error = NA)
}
colnames(path_trait_correlations_sun) <- required_formula
path_trait_correlations_sun$env <- "Sun"
path_trait_correlations_sun$pop <- "oy"
path_parameters_trait_shade <- path_parameters_trait[str_is(path_parameters_trait$label, str_upper_case), ]
path_trait_correlations_shade <- data.frame(matrix(ncol = length(required_formula)))
for (i in 1:length(required_formula)) {
path_trait_correlations_shade[, i] <- tryCatch(subset(path_parameters_trait_shade, formula == required_formula[i])$est, error = NA)
}
colnames(path_trait_correlations_shade) <- required_formula
path_trait_correlations_shade$env <- "Shade"
path_trait_correlations_shade$pop <- "oy"
path_parameters_eff <- subset(path_parameters, grepl("sun|shade|diff", lhs))
path_parameters_eff$allele_comb <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[1])
path_parameters_eff$trait <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[2])
path_parameters_eff$effect_type <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[3])
path_parameters_eff$env <- sapply(strsplit(path_parameters_eff$label, split = "_"), function(x) x[4])
nrow(path_parameters_eff)
path_parameters_eff$pop <- "oy"
path_trait_correlations_sun
path_parameters_qtl_effects_sun
#path analysis on oy group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/output/")
oy_data <-fread("oy_col_pheno_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(oy_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
oy_data$treatment <- factor(oy_data$treatment, levels = c("Sun", "Shade"))
head(oy_data)
oy_data[, c("A4", "A42", "A5", "AA", "AB", "BA", "BB")] <- NULL
m_best <- "
rdry ~ c(a, A) * bd
h3h1 ~ c(b, B) * rdry + c(c, C) * B42
idry ~ c(d, D) * rdry + c(e, E) * h3h1
#B4
#bd
B4_bd_dir_sun := 0
B4_bd_dir_shade := 0
B4_bd_dir_diff := 0
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := 0
B4_rdry_ind_shade := 0
B4_rdry_ind_diff := 0
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := 0
B4_h3h1_ind_shade := 0
B4_h3h1_ind_diff := 0
#idry
B4_idry_dir_sun := 0
B4_idry_dir_shade := 0
B4_idry_dir_diff := 0
B4_idry_ind_sun := 0
B4_idry_ind_shade := 0
B4_idry_ind_diff := 0
#B42
#bd
B42_bd_dir_sun := 0
B42_bd_dir_shade := 0
B42_bd_dir_diff := 0
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := 0
B42_rdry_ind_shade := 0
B42_rdry_ind_diff := 0
#h3h1
B42_h3h1_dir_sun := c
B42_h3h1_dir_shade := C
B42_h3h1_dir_diff := C - c
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := c * e
B42_idry_ind_shade := C * E
B42_idry_ind_diff := (C * E) - (c * e)
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := 0
B5_rdry_dir_shade := 0
B5_rdry_dir_diff := 0
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := 0
B5_h3h1_dir_shade := 0
B5_h3h1_dir_diff := 0
B5_h3h1_ind_sun := 0
B5_h3h1_ind_shade := 0
B5_h3h1_ind_diff := 0
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := 0
B5_idry_ind_shade := 0
B5_idry_ind_diff := 0
"
fit_best <- sem(m_best, data = oy_data, group = "treatment")
summary(fit_best, fit.measures = TRUE)
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
