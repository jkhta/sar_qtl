sar_gene_counts <- fread("sar_gxe_gene_counts.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
colnames(sar_gene_counts) <- c("trait", "qtl", "num_genes")
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/data/")
sar_gxe_qtl_list <- lapply(list.files(pattern = "gxe_qtl_ci.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
sar_gxe_qtl_pheno <- sapply(strsplit(list.files(pattern = "gxe_qtl_ci.csv"), split = "_qtl_ci"), function(x) x[1])
#labeling qtl tables with trait names
for (i in 1:length(sar_gxe_qtl_list)) {
sar_gxe_qtl_list[[i]]$trait <- sar_gxe_qtl_pheno[i]
}
sar_gxe_qtl_dt <- rbindlist(sar_gxe_qtl_list)
sar_gene_counts$trait <- paste(sar_gene_counts$trait, "gxe", sep = "_")
sar_gxe_qtl_dt_with_anno <- merge(sar_gxe_qtl_dt, sar_gene_counts, by = c("trait", "qtl"))
sar_gxe_qtl_dt_with_anno_subset <- subset(sar_gxe_qtl_dt_with_anno, select = c(trait, qtl, avg_snp_pve, score, left_bound, right_bound, num_genes))
sar_gxe_qtl_dt_with_anno_subset[is.na(sar_gxe_qtl_dt_with_anno_subset$num_genes), ]$num_genes  <- 0
colnames(sar_gxe_qtl_dt_with_anno_subset) <- c("Trait", "QTL", "SNP PVE", "-log10(p)", "Left Bound", "Right Bound", "# Genes")
sar_gxe_qtl_dt_with_anno_subset$Chromosome <- sapply(strsplit(sar_gxe_qtl_dt_with_anno_subset$QTL, split = "_"), function(x) x[2])
#multiple SNP PVE by 100 to represent a percentage
sar_gxe_qtl_dt_with_anno_subset$`SNP PVE` <- sar_gxe_qtl_dt_with_anno_subset$`SNP PVE` * 100
#removing the underscore and gxe
sar_gxe_qtl_dt_with_anno_subset$Trait <- gsub("_|gxe", "", sar_gxe_qtl_dt_with_anno_subset$Trait)
#changing trait name
sar_gxe_qtl_dt_with_anno_subset$Trait <- revalue(sar_gxe_qtl_dt_with_anno_subset$Trait, c("bd" = "BD_SAR", "h3h1" = "IG_SAR", "idry" = "IB_SAR", "rdry" = "RB_SAR"))
#creating new QTL names
sar_gxe_qtl_dt_with_anno_subset$`QTL Marker` <- sar_gxe_qtl_dt_with_anno_subset$QTL
sar_gxe_qtl_dt_with_anno_complete <- c()
#for each trait subset the QTL for that trait
for (i in unique(sar_gxe_qtl_dt_with_anno_subset$Trait)) {
sar_gxe_qtl_dt_with_anno_trait_subset <- subset(sar_gxe_qtl_dt_with_anno_subset, Trait == i)
#for each chromosome with QTL, subset the data by chromosome and create new QTL names
for (j in unique(sar_gxe_qtl_dt_with_anno_trait_subset$Chromosome)) {
sar_gxe_qtl_dt_with_anno_trait_chr_subset <- subset(sar_gxe_qtl_dt_with_anno_trait_subset, Chromosome == j)
sar_gxe_qtl_dt_with_anno_trait_chr_subset$Base <- as.numeric(sapply(strsplit(sar_gxe_qtl_dt_with_anno_trait_chr_subset$`QTL Marker`, split = "_"), function(x) x[3]))
sar_gxe_qtl_dt_with_anno_trait_chr_subset <- sar_gxe_qtl_dt_with_anno_trait_chr_subset[order(sar_gxe_qtl_dt_with_anno_trait_chr_subset$Base)]
sar_gxe_qtl_dt_with_anno_trait_chr_subset$QTL_no <- 1:nrow(sar_gxe_qtl_dt_with_anno_trait_chr_subset)
sar_gxe_qtl_dt_with_anno_trait_chr_subset$QTL <- paste(paste(sar_gxe_qtl_dt_with_anno_trait_chr_subset$Trait, sar_gxe_qtl_dt_with_anno_trait_chr_subset$Chromosome, sep = ""), sar_gxe_qtl_dt_with_anno_trait_chr_subset$QTL_no, sep = "_")
sar_gxe_qtl_dt_with_anno_trait_chr_subset$Base <- NULL
sar_gxe_qtl_dt_with_anno_complete <- rbindlist(list(sar_gxe_qtl_dt_with_anno_complete, sar_gxe_qtl_dt_with_anno_trait_chr_subset))
}
}
#removing and rearranging columns
sar_gxe_qtl_dt_with_anno_complete$QTL_no <- NULL
sar_gxe_qtl_dt_with_anno_complete <- subset(sar_gxe_qtl_dt_with_anno_complete, select = c(Trait, QTL, `SNP PVE`, `QTL Marker`, Chromosome, `Left Bound`, `Right Bound`, `# Genes`))
sar_gxe_qtl_dt_with_anno_complete
#writing data
fwrite(sar_gxe_qtl_dt_with_anno_complete, "sar_gxe_qtl_info_with_anno.csv", sep = ",", row.names = FALSE)
fwrite(subset(sar_gxe_qtl_dt_with_anno_complete, select = c(Trait, `QTL Marker`, QTL)), "sar_gxe_matched_qtl_name.csv", sep = ",", row.names = FALSE)
print(xtable(sar_gxe_qtl_dt_with_anno_complete, digits = 2), include.rownames = FALSE)
(4251866 + 3062640) / 2
#path analysis
#need to grab the snps m_4_41028, m_5_3799350, 4_8938713, and 5_25961748
library(data.table)
library(plyr)
rm(list = ls())
#reading in the genotype data
setwd("/Users/James/Documents/GitHub/sar_qtl/6_push_button/data")
geno_data <- readRDS("nam_rqtl_geno_prob_array_comp_11_all_rils_NEW.RDS")
#path analysis on blh group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/data/")
blh_data <- fread("blh_blups_qtl_combo_merge.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setnames(blh_data, c("r_dry", "h3_h1", "i_dry"), c("rdry", "h3h1", "idry"))
blh_data$treatment <- factor(blh_data$treatment, levels = c("Sun", "Shade"))
head(blh_data)
blh_data[, c("A4", "A42", "A5", "A52", "AA", "AB", "BA", "BB")] <- NULL
blh_data
m_best <- "
bd ~ B4 + B42 + B5 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4 + B5 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B4 + B42 + B5 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B4 + B42 + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B42 + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B4 + B42 + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B42 + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B4 + B42 + B5 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B4 + B5 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B4 + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B4 + B42 + B5 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B4 + B42 + B52
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B4 + B42
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ B4
rdry ~ bd + B5
h3h1 ~ bd + rdry + B5
idry ~ bd + rdry + h3h1 + B4
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
m_best <- "
bd ~ c(a, A) * B4
rdry ~ c(b, B) * bd + c(c, C) * B5
h3h1 ~ c(d, D) * bd + c(e, E) * rdry + c(f, F) * B5
idry ~ c(g, G) * bd + c(h, H) * rdry + c(i, I) * h3h1 + c(j, J) * B4
B4_bd_dir_sun := a
B4_bd_dir_shade := A
B4_bd_dir_diff := A - a
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := a * b
B4_rdry_ind_shade := A * B
B4_rdry_ind_diff := (A * B) - (a * b)
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := (a * d) + (a * b * e)
B4_h3h1_ind_shade := (A * D) + (A * B * E)
B4_h3h1_ind_diff := ((A * D) + (A * B * E)) - ((a * d) + (a * b * e))
#idry
B4_idry_dir_sun := j
B4_idry_dir_shade := J
B4_idry_dir_diff := J - j
B4_idry_ind_sun := (a * g) + (a * d * i) + (a * b * h) + (a * b * e * i)
B4_idry_ind_shade := (A * G) + (A * D * I) + (A * B * H) + (A * B * E * I)
B4_idry_ind_diff := ((A * G) + (A * D * I) + (A * B * H) + (A * B * E * I)) - ((a * g) + (a * d * i) + (a * b * h) + (a * b * e * i))
#B42
#bd
B42_bd_dir_sun := 0
B42_bd_dir_shade := 0
B42_bd_dir_diff := 0
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := 0
B42_rdry_ind_shade := 0
B42_rdry_ind_diff := 0
#h3h1
B42_h3h1_dir_sun := 0
B42_h3h1_dir_shade := 0
B42_h3h1_dir_diff := 0
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := 0
B42_idry_ind_shade := 0
B42_idry_ind_diff := 0
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := c
B5_rdry_dir_shade := C
B5_rdry_dir_diff := C - c
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := f
B5_h3h1_dir_shade := F
B5_h3h1_dir_diff := F - f
B5_h3h1_ind_sun := c * e
B5_h3h1_ind_shade := C * E
B5_h3h1_ind_diff := (C * E) - (c * e)
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := (c * h) + (c * e * i) + (f * i)
B5_idry_ind_shade := (C * H) + (C * E * I) + (F * I)
B5_idry_ind_diff := ((C * H) + (C * E * I) + (F * I)) - ((c * h) + (c * e * i) + (f * i))
#B52
#bd
B52_bd_dir_sun := 0
B52_bd_dir_shade := 0
B52_bd_dir_diff := 0
B52_bd_ind_sun := 0
B52_bd_ind_shade := 0
B52_bd_ind_diff := 0
#rdry
B52_rdry_dir_sun := 0
B52_rdry_dir_shade := 0
B52_rdry_dir_diff := 0
B52_rdry_ind_sun := 0
B52_rdry_ind_shade := 0
B52_rdry_ind_diff := 0
#h3h1
B52_h3h1_dir_sun := 0
B52_h3h1_dir_shade := 0
B52_h3h1_dir_diff := 0
B52_h3h1_ind_sun := 0
B52_h3h1_ind_shade := 0
B52_h3h1_ind_diff := 0
#idry
B52_idry_dir_sun := 0
B52_idry_dir_shade := 0
B52_idry_dir_diff := 0
B52_idry_ind_sun := 0
B52_idry_ind_shade := 0
B52_idry_ind_diff := 0
"
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
?semPaths
semPaths(fit_best,
what = "path",
whatLabels = "path",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
semPaths(fit_best,
what = "path",
whatLabels = "par",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
semPaths(fit_best,
what = "path",
whatLabels = "name",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
semPaths(fit_best,
what = "path",
whatLabels = "label",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
m_best <- "
bd ~ c(a, A) * B4
rdry ~ c(b, B) * bd + c(c, C) * B5
h3h1 ~ c(d, D) * bd + c(e, E) * rdry + c(f, F) * B5
idry ~ c(g, G) * bd + c(h, H) * rdry + c(i, I) * h3h1 + c(j, J) * B4
B4_bd_dir_sun := a
B4_bd_dir_shade := A
B4_bd_dir_diff := A - a
B4_bd_ind_sun := 0
B4_bd_ind_shade := 0
B4_bd_ind_diff := 0
#rdry
B4_rdry_dir_sun := 0
B4_rdry_dir_shade := 0
B4_rdry_dir_diff := 0
B4_rdry_ind_sun := a * b
B4_rdry_ind_shade := A * B
B4_rdry_ind_diff := (A * B) - (a * b)
#h3h1
B4_h3h1_dir_sun := 0
B4_h3h1_dir_shade := 0
B4_h3h1_dir_diff := 0
B4_h3h1_ind_sun := (a * d) + (a * b * e)
B4_h3h1_ind_shade := (A * D) + (A * B * E)
B4_h3h1_ind_diff := ((A * D) + (A * B * E)) - ((a * d) + (a * b * e))
#idry
B4_idry_dir_sun := j
B4_idry_dir_shade := J
B4_idry_dir_diff := J - j
B4_idry_ind_sun := (a * g) + (a * d * i) + (a * b * h) + (a * b * e * i)
B4_idry_ind_shade := (A * G) + (A * D * I) + (A * B * H) + (A * B * E * I)
B4_idry_ind_diff := ((A * G) + (A * D * I) + (A * B * H) + (A * B * E * I)) - ((a * g) + (a * d * i) + (a * b * h) + (a * b * e * i))
#B42
#bd
B42_bd_dir_sun := 0
B42_bd_dir_shade := 0
B42_bd_dir_diff := 0
B42_bd_ind_sun := 0
B42_bd_ind_shade := 0
B42_bd_ind_diff := 0
#rdry
B42_rdry_dir_sun := 0
B42_rdry_dir_shade := 0
B42_rdry_dir_diff := 0
B42_rdry_ind_sun := 0
B42_rdry_ind_shade := 0
B42_rdry_ind_diff := 0
#h3h1
B42_h3h1_dir_sun := 0
B42_h3h1_dir_shade := 0
B42_h3h1_dir_diff := 0
B42_h3h1_ind_sun := 0
B42_h3h1_ind_shade := 0
B42_h3h1_ind_diff := 0
#idry
B42_idry_dir_sun := 0
B42_idry_dir_shade := 0
B42_idry_dir_diff := 0
B42_idry_ind_sun := 0
B42_idry_ind_shade := 0
B42_idry_ind_diff := 0
#B5
#bd
B5_bd_dir_sun := 0
B5_bd_dir_shade := 0
B5_bd_dir_diff := 0
B5_bd_ind_sun := 0
B5_bd_ind_shade := 0
B5_bd_ind_diff := 0
#rdry
B5_rdry_dir_sun := c
B5_rdry_dir_shade := C
B5_rdry_dir_diff := C - c
B5_rdry_ind_sun := 0
B5_rdry_ind_shade := 0
B5_rdry_ind_diff := 0
#h3h1
B5_h3h1_dir_sun := f
B5_h3h1_dir_shade := F
B5_h3h1_dir_diff := F - f
B5_h3h1_ind_sun := c * e
B5_h3h1_ind_shade := C * E
B5_h3h1_ind_diff := (C * E) - (c * e)
#idry
B5_idry_dir_sun := 0
B5_idry_dir_shade := 0
B5_idry_dir_diff := 0
B5_idry_ind_sun := (c * h) + (c * e * i) + (f * i)
B5_idry_ind_shade := (C * H) + (C * E * I) + (F * I)
B5_idry_ind_diff := ((C * H) + (C * E * I) + (F * I)) - ((c * h) + (c * e * i) + (f * i))
#B52
#bd
B52_bd_dir_sun := 0
B52_bd_dir_shade := 0
B52_bd_dir_diff := 0
B52_bd_ind_sun := 0
B52_bd_ind_shade := 0
B52_bd_ind_diff := 0
#rdry
B52_rdry_dir_sun := 0
B52_rdry_dir_shade := 0
B52_rdry_dir_diff := 0
B52_rdry_ind_sun := 0
B52_rdry_ind_shade := 0
B52_rdry_ind_diff := 0
#h3h1
B52_h3h1_dir_sun := 0
B52_h3h1_dir_shade := 0
B52_h3h1_dir_diff := 0
B52_h3h1_ind_sun := 0
B52_h3h1_ind_shade := 0
B52_h3h1_ind_diff := 0
#idry
B52_idry_dir_sun := 0
B52_idry_dir_shade := 0
B52_idry_dir_diff := 0
B52_idry_ind_sun := 0
B52_idry_ind_shade := 0
B52_idry_ind_diff := 0
"
fit_best <- sem(m_best, data = blh_data, group = "treatment", missing = "ML")
summary(fit_best, fit.measures = TRUE)
semPaths(fit_best,
what = "path",
whatLabels = "label",
layout = "tree",
edge.label.cex = 1.5,
residuals = FALSE,
exoCov = FALSE,
exoVar = FALSE,
intercepts = FALSE,
#edge.color = FRI_sha_FLC_col_sun_coef,
fade = FALSE,
combineGroups = FALSE,
nCharNodes = 0)
#path analysis on blh group
library(data.table)
library(lavaan)
library(semPlot)
library(lettercase)
