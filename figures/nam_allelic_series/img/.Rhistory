IB_SAR_fixef_ggplot_IB_SAR5_1,
nrow = 2,
ncol = 3,
labels = c("A", "B", "C", "D", "E", "F"),
font.label = list(size = 25))
#turning std into % change in plasticity
nam_trait_lme4qtl_fixef_gxe$fixef_std_norm <- with(nam_trait_lme4qtl_fixef_gxe, (fixef_std/abs(trt_eff) * 100))
#this script will plot the allelic series for each QTL and trait across populations
library(data.table)
library(ggplot2)
library(ggpubr)
rm(list = ls())
#reading in the allelic series data
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/data/")
nam_trait_lme4qtl_fixef <- fread("trait_lme4qtl_fixef_no_cov.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#reading in the file to change qtl names
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/qtl_table/data/")
trait_qtl_name_match <- fread("sar_gxe_matched_qtl_name.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
trait_qtl_name_match$trait_qtl <- with(trait_qtl_name_match, paste(Trait, `QTL Marker`, sep = "_"))
#this is so the allele represents substituting from Col-0 allele to alternative
#parent allele
nam_trait_lme4qtl_fixef$fixef <- nam_trait_lme4qtl_fixef$fixef * -1
#only working with gxe traits
nam_trait_lme4qtl_fixef_gxe <- subset(nam_trait_lme4qtl_fixef, grepl("_gxe", trait))
#turning effect into % change in plasticity
nam_trait_lme4qtl_fixef_gxe$fixef_norm <- with(nam_trait_lme4qtl_fixef_gxe, (fixef/abs(trt_eff) * 100))
#turning std into % change in plasticity
nam_trait_lme4qtl_fixef_gxe$fixef_std_norm <- with(nam_trait_lme4qtl_fixef_gxe, (fixef_std/abs(trt_eff) * 100))
#changing trait names
new_trait_name_df <- data.frame(old_name = c("bd_gxe", "h3_h1_gxe", "i_dry_gxe", "r_dry_gxe"),
new_name = c("BD_SAR", "IG_SAR", "IB_SAR", "RB_SAR"),
stringsAsFactors = FALSE)
nam_trait_lme4qtl_fixef_gxe$trait <- mapvalues(nam_trait_lme4qtl_fixef_gxe$trait,
from = new_trait_name_df$old_name,
to = new_trait_name_df$new_name)
nam_trait_lme4qtl_fixef_gxe$trait_qtl <- with(nam_trait_lme4qtl_fixef_gxe, paste(trait, qtl, sep = "_"))
nam_trait_lme4qtl_fixef_gxe$QTL <- mapvalues(nam_trait_lme4qtl_fixef_gxe$trait_qtl,
from = trait_qtl_name_match$trait_qtl,
to = trait_qtl_name_match$QTL)
for (i in unique(nam_trait_lme4qtl_fixef_gxe$trait)) {
nam_trait_lme4qtl_fixef_gxe_subset <- subset(nam_trait_lme4qtl_fixef_gxe, trait == i)
nam_trait_lme4qtl_fixef_gxe_subset <- nam_trait_lme4qtl_fixef_gxe_subset[order(nam_trait_lme4qtl_fixef_gxe_subset$qtl), ]
for (j in unique(nam_trait_lme4qtl_fixef_gxe_subset$QTL)) {
nam_trait_lme4qtl_fixef_gxe_subset_qtl <- subset(nam_trait_lme4qtl_fixef_gxe_subset, QTL == j)
plot_name <- paste(i, "fixef_ggplot", j, sep = "_")
assign(plot_name, ggplot(nam_trait_lme4qtl_fixef_gxe_subset_qtl, aes(x = pop, y = fixef_norm, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef_norm - fixef_std_norm, ymax = fixef_norm + fixef_std_norm), width = 0.2) +
facet_grid(~ QTL, scale = "free") +
xlab("Population") +
ylab("% Change in plasticity") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none"))
}
}
#now modifying the plots
RB_SAR_fixef_ggplot_RB_SAR4_2 <- RB_SAR_fixef_ggplot_RB_SAR4_2 + theme(axis.title.y = element_blank())
RB_SAR_fixef_ggplot_RB_SAR5_1 <- RB_SAR_fixef_ggplot_RB_SAR5_1 + theme(axis.title.y = element_blank())
IG_SAR_fixef_ggplot_IG_SAR5_1 <- IG_SAR_fixef_ggplot_IG_SAR5_1 + theme(axis.title.y = element_blank())
IB_SAR_fixef_ggplot_IB_SAR5_1 <- IB_SAR_fixef_ggplot_IB_SAR5_1 + theme(axis.title.y = element_blank())
ggarrange(BD_SAR_fixef_ggplot_BD_SAR4_1,
RB_SAR_fixef_ggplot_RB_SAR4_2,
RB_SAR_fixef_ggplot_RB_SAR5_1,
IG_SAR_fixef_ggplot_IG_SAR2_1,
IG_SAR_fixef_ggplot_IG_SAR5_1,
IB_SAR_fixef_ggplot_IB_SAR5_1,
nrow = 2,
ncol = 3,
labels = c("A", "B", "C", "D", "E", "F"),
font.label = list(size = 25))
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/img/")
ggsave("gxe_allelic_series_normalized_subset.png", device = "png", width = 20, height = 10)
#plotting other SAR QTL allelic series
RB_SAR_fixef_ggplot_RB_SAR4_2 <- RB_SAR_fixef_ggplot_RB_SAR4_2 + theme(axis.title.y = element_blank())
BD_SAR_fixef_ggplot_BD_SAR5_1 <- BD_SAR_fixef_ggplot_BD_SAR5_1 + theme(axis.title.y = element_blank())
RB_SAR_fixef_ggplot_RB_SAR4_1 <- RB_SAR_fixef_ggplot_RB_SAR4_1 + theme(axis.title.y = element_blank())
IB_SAR_fixef_ggplot_IB_SAR4_1 <- IB_SAR_fixef_ggplot_IB_SAR4_1 + theme(axis.title.y = element_blank())
#creating figure with extra supplemental figures
ggarrange(BD_SAR_fixef_ggplot_BD_SAR4_2,
BD_SAR_fixef_ggplot_BD_SAR5_1,
RB_SAR_fixef_ggplot_RB_SAR4_1,
RB_SAR_fixef_ggplot_RB_SAR5_2,
IB_SAR_fixef_ggplot_IB_SAR4_1,
nrow = 2,
ncol = 3,
labels = c("A", "B", "C", "D", "E"),
font.label = list(size = 25))
ggsave("gxe_allelic_series_normalized_subset_supplemental.png", device = "png", width = 20, height = 10)
#script to merge and plot direct and indirect effects
library(data.table)
library(ggplot2)
library(ggpubr)
library(plyr)
rm(list = ls())
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/7_path_analysis/data/")
#looking at fri and flc individually
path_data_FRI_FLC_ind <- rbindlist(lapply(list.files(pattern = "path_eff_blups.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data_FRI_FLC_ind$pop <- revalue(path_data_FRI_FLC_ind$pop, c("sha" = "Sha", "oy" = "Oy-0", "jea" = "Jea", "ita" = "Ita-0", "cvi" = "Cvi-0", "bur" = "Bur-0", "blh" = "Blh-1"))
path_data_FRI_FLC_ind$pop_facet <- factor(path_data_FRI_FLC_ind$pop, levels = c("sha" = "Sha", "oy" = "Oy-0", "jea" = "Jea", "ita" = "Ita-0", "cvi" = "Cvi-0", "bur" = "Bur-0", "blh" = "Blh-1"))
path_data_FRI_FLC_ind$trait_facet <- factor(path_data_FRI_FLC_ind$trait, levels = c("bd", "rdry", "h3h1", "idry"))
path_data_FRI_FLC_ind$effect_type <- revalue(path_data_FRI_FLC_ind$effect_type, c("dir" = "Direct", "ind" = "Indirect"))
#changing name of traits
path_data_FRI_FLC_ind$trait_facet <- mapvalues(path_data_FRI_FLC_ind$trait_facet,
from = c("bd", "rdry", "h3h1", "idry"),
to = c("BD_SAR", "RB_SAR", "IG_SAR", "IB_SAR"))
geom_point_size <- 30
path_data_diff_B4 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B4")
path_data_diff_B4[path_data_diff_B4 == 0] <- NA
path_data_diff_B4_ggplot <- ggplot(data = path_data_diff_B4, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = ci.upper, xmin = ci.lower), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 20),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20),
legend.position = "none") +
scale_x_continuous(
labels = scales::number_format(accuracy = 0.1)) +
ggtitle("SAR4_1")
path_data_diff_B42 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B42")
path_data_diff_B42[path_data_diff_B42 == 0] <- NA
path_data_diff_B42_ggplot <- ggplot(data = path_data_diff_B42, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = ci.upper, xmin = ci.lower), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20)) +
ggtitle("SAR4_2")
path_data_diff_B5 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B5")
path_data_diff_B5[path_data_diff_B5 == 0] <- NA
path_data_diff_B5_ggplot <- ggplot(data = path_data_diff_B5, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = ci.upper, xmin = ci.lower), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20)) +
scale_x_continuous(breaks = round(seq(min(path_data_diff_B5$est, na.rm = TRUE), max(path_data_diff_B5$est, na.rm = TRUE), by = 0.3), 1)) +
ggtitle("SAR5")
ggarrange(path_data_diff_B4_ggplot, path_data_diff_B5_ggplot,
vjust = 1.1,
hjust = c(-4.5, -0.5),
labels = c("A", "B"),
font.label = list(size = 30))
#no legend and yaxis text
path_data_diff_B42_ggplot <- ggplot(data = path_data_diff_B42, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = ci.upper, xmin = ci.lower), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 15),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20))  +
ggtitle("SAR4_2")
#yaxis text and legend
path_data_diff_B5_ggplot <- ggplot(data = path_data_diff_B5, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = ci.upper, xmin = ci.lower), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 20),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20),
legend.position = "none") +
#scale_x_continuous(breaks = round(seq(min(path_data_diff_B5$est, na.rm = TRUE), max(path_data_diff_B5$est, na.rm = TRUE), by = 0.3), 1)) +
ggtitle("SAR5")
ggarrange(path_data_diff_B4_ggplot, path_data_diff_B42_ggplot, path_data_diff_B5_ggplot,
vjust = 1.1,
#hjust = c(-4.5, , -4),
labels = c("A", "B", "C"),
font.label = list(size = 30))
#this script will plot the allelic series for each QTL and trait across populations
library(data.table)
library(ggplot2)
library(ggpubr)
rm(list = ls())
#reading in the allelic series data
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/data/")
nam_trait_lme4qtl_fixef <- fread("trait_lme4qtl_fixef_no_cov.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#this is so the allele represents substituting from Col-0 allele to alternative
#parent allele
nam_trait_lme4qtl_fixef$fixef <- nam_trait_lme4qtl_fixef$fixef * -1
bd_geno_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "bd_geno")
#changing QTL names
bd_geno_fixef$qtl <- mapvalues(bd_geno_fixef$qtl, from = c("m_4_407208", "m_5_3799350"), to = c("BD4_1", "BD5_2"))
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(plot.background = element_rect(fill = "transparent", color = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(plot.background = element_rect(fill = "transparent", color = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/img/")
ggsave("bd_geno_allelic_series.png", device = "png", width = 14, height = 8)
#this script will plot the allelic series for each QTL and trait across populations
library(data.table)
library(ggplot2)
library(ggpubr)
rm(list = ls())
#reading in the allelic series data
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/data/")
nam_trait_lme4qtl_fixef <- fread("trait_lme4qtl_fixef_no_cov.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#this is so the allele represents substituting from Col-0 allele to alternative
#parent allele
nam_trait_lme4qtl_fixef$fixef <- nam_trait_lme4qtl_fixef$fixef * -1
bd_geno_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "bd_geno")
#changing QTL names
bd_geno_fixef$qtl <- mapvalues(bd_geno_fixef$qtl, from = c("m_4_407208", "m_5_3799350"), to = c("BD4_1", "BD5_2"))
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/img/")
ggsave("bd_geno_allelic_series.png", device = "png", width = 14, height = 8, bg = "transparent")
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(plot.background = element_rect(fill = 'transparent'),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(plot.background = element_rect(fill = 'transparent'),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/img/")
ggsave("bd_geno_allelic_series.png", device = "png", width = 14, height = 8, bg = "transparent")
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "BD4_1"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effect") +
theme(plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "BD5_2"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
theme(plot.background = element_rect(fill = 'transparent', colour = NA),
text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/nam_allelic_series/img/")
ggsave("bd_geno_allelic_series.png", device = "png", width = 14, height = 8, bg = "transparent")
