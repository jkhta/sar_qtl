gemma_bd_geno_lm_ouput$chr <- with(gemma_bd_geno_lm_ouput, as.integer(sapply(strsplit(rs, split = "_"), function(x) x[1])))
gemma_bd_geno_lm_ouput$ps <- with(gemma_bd_geno_lm_ouput, as.integer(sapply(strsplit(rs, split = "_"), function(x) x[2])))
head(gemma_bd_geno_lm_ouput)
#this script will generate a LaTeX output of different tables
library(data.table)
library(xtable)
rm(list = ls())
#table output for trait effects and heritabilities
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/h2_table/")
h2_table <- fread("trait_effects_and_h2_no_ci.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#changing column names and removing underscores
colnames(h2_table)[1] <- NA
rownames(h2_table) <- NULL
colnames(h2_table) <- c("Trait", "Shelf (sd)", "Treatment (sd)", "Geno Var", "GxE Var", "Residual Var", "H2 (%)", "GxE PVE (%)")
#multiplying H2 and GxE PVE by 100 to represent percentages
h2_table$H2 <- h2_table$H2 * 100
h2_table$`GxE PVE` <- h2_table$`GxE PVE` * 100
#moreving underscores
h2_table$Trait <- gsub("_", "", h2_table$Trait)
#generating xtable
print(xtable(h2_table, caption = "Table 1", digits = 2), include.rownames=FALSE)
#reading in qtl found for genotype random effects and GxE random effects
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/")
qtl_table_geno <- lapply(list.files(pattern = "geno"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
#this script will generate a LaTeX output of different tables
library(data.table)
library(xtable)
rm(list = ls())
#table output for trait effects and heritabilities
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/h2_table/input/")
h2_table <- fread("trait_effects_and_h2_no_ci.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#changing column names and removing underscores
colnames(h2_table)[1] <- NA
rownames(h2_table) <- NULL
colnames(h2_table) <- c("Trait", "Shelf (sd)", "Treatment (sd)", "Geno Var", "GxE Var", "Residual Var", "H2 (%)", "GxE PVE (%)")
#multiplying H2 and GxE PVE by 100 to represent percentages
h2_table$H2 <- h2_table$H2 * 100
h2_table$`GxE PVE` <- h2_table$`GxE PVE` * 100
#moreving underscores
h2_table$Trait <- gsub("_", "", h2_table$Trait)
#generating xtable
print(xtable(h2_table, caption = "Table 1", digits = 2), include.rownames=FALSE)
#reading in qtl found for genotype random effects and GxE random effects
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/")
qtl_table_geno <- lapply(list.files(pattern = "geno"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
#this script will plot the allelic series for each QTL and trait across populations
library(data.table)
library(ggplot2)
library(ggpubr)
rm(list = ls())
#reading in the allelic series data
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/nam_allelic_series/data/")
nam_trait_lme4qtl_fixef <- fread("trait_lme4qtl_fixef.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#this is so the allele represents substituting from Col-0 allele to alternative
#parent allele
nam_trait_lme4qtl_fixef$fixef <- nam_trait_lme4qtl_fixef$fixef * -1
bd_geno_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "bd_geno")
bd_geno_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_geno_fixef, qtl == "m_4_407208"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Bolting time") +
theme(text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
bd_geno_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_geno_fixef, qtl == "m_5_3799350"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Bolting time") +
theme(text = element_text(size = 25),
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.y = element_blank())
ggarrange(bd_geno_fixef_ggplot_m_4_407208,
bd_geno_fixef_ggplot_m_5_3799350,
nrow = 1, ncol = 2,
labels = c("A", "B"),
font.label = list(size = 25))
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/nam_allelic_series/img/")
#this script will plot the allelic series for each QTL and trait across populations
library(data.table)
library(ggplot2)
library(ggpubr)
rm(list = ls())
#reading in the allelic series data
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/nam_allelic_series/data/")
nam_trait_lme4qtl_fixef <- fread("trait_lme4qtl_fixef.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
#this is so the allele represents substituting from Col-0 allele to alternative
#parent allele
nam_trait_lme4qtl_fixef$fixef <- nam_trait_lme4qtl_fixef$fixef * -1
bd_gxe_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "bd_gxe")
bd_gxe_fixef_ggplot_m_4_407208 <- ggplot(subset(bd_gxe_fixef, qtl == "m_4_407208"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Bolting time") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
bd_gxe_fixef_ggplot_m_4_9222034 <- ggplot(subset(bd_gxe_fixef, qtl == "m_4_9222034"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Bolting time") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
bd_gxe_fixef_ggplot_m_5_3799350 <- ggplot(subset(bd_gxe_fixef, qtl == "m_5_3799350"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Bolting time") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
h3h1_gxe_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "h3_h1_gxe")
h3h1_gxe_fixef_ggplot_m_2_11952697 <- ggplot(subset(h3h1_gxe_fixef, qtl == "m_2_11952697"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Inflorescence growth") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
h3h1_gxe_fixef_ggplot_m_5_4991121 <- ggplot(subset(h3h1_gxe_fixef, qtl == "m_5_4991121"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Inflorescence growth") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
r_dry_gxe_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "r_dry_gxe")
r_dry_gxe_fixef_ggplot <- ggplot(r_dry_gxe_fixef, aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Rosette biomass") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
i_dry_gxe_fixef <- subset(nam_trait_lme4qtl_fixef, trait == "i_dry_gxe")
i_dry_gxe_fixef_ggplot_m_5_20260494 <- ggplot(subset(i_dry_gxe_fixef, qtl == "m_5_20260494"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Inflorescence biomass") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
i_dry_gxe_fixef_ggplot_m_5_4216890 <- ggplot(subset(i_dry_gxe_fixef, qtl == "m_5_4216890"), aes(x = pop, y = fixef, fill = pop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = fixef - fixef_std, ymax = fixef + fixef_std), width = 0.2) +
facet_grid(~ qtl, scale = "free") +
xlab("Population") +
ylab("QTL effects") +
ggtitle("Inflorescence biomass") +
theme(text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 20),
legend.position = "none")
#script to merge and plot direct and indirect effects
library(data.table)
library(ggplot2)
library(ggpubr)
library(plyr)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/data/")
#looking at fri and flc individually
path_data_FRI_FLC_ind <- rbindlist(lapply(list.files(pattern = "path_eff_blups.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data_FRI_FLC_ind$pop <- revalue(path_data_FRI_FLC_ind$pop, c("sha" = "Sha", "oy" = "Oy-0", "jea" = "Jea", "ita" = "Ita-0", "cvi" = "Cvi-0", "bur" = "Bur-0", "blh" = "Blh-1"))
path_data_FRI_FLC_ind$pop_facet <- factor(path_data_FRI_FLC_ind$pop, levels = c("sha" = "Sha", "oy" = "Oy-0", "jea" = "Jea", "ita" = "Ita-0", "cvi" = "Cvi-0", "bur" = "Bur-0", "blh" = "Blh-1"))
path_data_FRI_FLC_ind$trait_facet <- factor(path_data_FRI_FLC_ind$trait, levels = c("bd", "rdry", "h3h1", "idry"))
path_data_FRI_FLC_ind$effect_type <- revalue(path_data_FRI_FLC_ind$effect_type, c("dir" = "Direct", "ind" = "Indirect"))
geom_point_size <- 30
path_data_diff_B4 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B4")
path_data_diff_B4[path_data_diff_B4 == 0] <- NA
path_data_diff_B4_ggplot <- ggplot(data = path_data_diff_B4, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 20),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20),
legend.position = "none") +
scale_x_continuous(
labels = scales::number_format(accuracy = 0.1)) +
ggtitle("m_4_41028")
path_data_diff_B42 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B42")
path_data_diff_B42[path_data_diff_B42 == 0] <- NA
path_data_diff_B42_ggplot <- ggplot(data = path_data_diff_B42, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20)) +
ggtitle("m_4_9222034")
path_data_diff_B5 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B5")
path_data_diff_B5[path_data_diff_B5 == 0] <- NA
path_data_diff_B5_ggplot <- ggplot(data = path_data_diff_B5, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20)) +
scale_x_continuous(breaks = round(seq(min(path_data_diff_B5$est, na.rm = TRUE), max(path_data_diff_B5$est, na.rm = TRUE), by = 0.3), 1)) +
ggtitle("m_5_3799350")
#this script will generate the lme4qtl models to get the standard errors of the effects
library(lme4qtl)
library(data.table)
library(plyr)
rm(list = ls())
#reading in the kinship information
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/path_analysis_GridLMM/")
#script to merge and plot direct and indirect effects
library(data.table)
library(ggplot2)
library(ggpubr)
library(plyr)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/data/")
#looking at fri and flc individually
path_data_FRI_FLC_ind <- rbindlist(lapply(list.files(pattern = "path_eff_blups.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
#script to merge and plot direct and indirect effects
library(data.table)
library(ggplot2)
library(ggpubr)
library(plyr)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/7_path_analysis/data/")
#looking at fri and flc individually
path_data_FRI_FLC_ind <- rbindlist(lapply(list.files(pattern = "path_eff_blups.csv"),
function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE)))
path_data_FRI_FLC_ind$pop <- revalue(path_data_FRI_FLC_ind$pop, c("sha" = "Sha", "oy" = "Oy-0", "jea" = "Jea", "ita" = "Ita-0", "cvi" = "Cvi-0", "bur" = "Bur-0", "blh" = "Blh-1"))
path_data_FRI_FLC_ind$pop_facet <- factor(path_data_FRI_FLC_ind$pop, levels = c("sha" = "Sha", "oy" = "Oy-0", "jea" = "Jea", "ita" = "Ita-0", "cvi" = "Cvi-0", "bur" = "Bur-0", "blh" = "Blh-1"))
path_data_FRI_FLC_ind$trait_facet <- factor(path_data_FRI_FLC_ind$trait, levels = c("bd", "rdry", "h3h1", "idry"))
path_data_FRI_FLC_ind$effect_type <- revalue(path_data_FRI_FLC_ind$effect_type, c("dir" = "Direct", "ind" = "Indirect"))
geom_point_size <- 30
path_data_diff_B4 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B4")
path_data_diff_B4[path_data_diff_B4 == 0] <- NA
path_data_diff_B4_ggplot <- ggplot(data = path_data_diff_B4, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 20),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20),
legend.position = "none") +
scale_x_continuous(
labels = scales::number_format(accuracy = 0.1)) +
ggtitle("m_4_41028")
path_data_diff_B42 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B42")
path_data_diff_B42[path_data_diff_B42 == 0] <- NA
path_data_diff_B42_ggplot <- ggplot(data = path_data_diff_B42, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20)) +
ggtitle("m_4_9222034")
path_data_diff_B5 <- subset(path_data_FRI_FLC_ind, env == "diff" & allele_comb == "B5")
path_data_diff_B5[path_data_diff_B5 == 0] <- NA
path_data_diff_B5_ggplot <- ggplot(data = path_data_diff_B5, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20)) +
scale_x_continuous(breaks = round(seq(min(path_data_diff_B5$est, na.rm = TRUE), max(path_data_diff_B5$est, na.rm = TRUE), by = 0.3), 1)) +
ggtitle("m_5_3799350")
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/path_analysis_figures/")
ggarrange(path_data_diff_B4_ggplot, path_data_diff_B5_ggplot,
vjust = 1.1,
hjust = c(-4.5, -0.5),
labels = c("A", "B"),
font.label = list(size = 30))
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/path_analysis_figures/img/")
ggarrange(path_data_diff_B4_ggplot, path_data_diff_B5_ggplot,
vjust = 1.1,
hjust = c(-4.5, -0.5),
labels = c("A", "B"),
font.label = list(size = 30))
ggsave("SAR4_SAR5_effect_comparison.png", device = "png", width = 15, height = 6)
#no legend and yaxis text
path_data_diff_B42_ggplot <- ggplot(data = path_data_diff_B42, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 15),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20))  +
ggtitle("m_4_9222034")
#yaxis text and legend
path_data_diff_B5_ggplot <- ggplot(data = path_data_diff_B5, aes(x = est, y = pop_facet, color = effect_type)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmax = est + se, xmin = est - se), height = 0.25, size = 2) +
geom_vline(xintercept = 0,
color = "black", size = 0.25) +
facet_wrap(~ trait_facet, nrow = 1) +
xlab("QTL effect") +
ylab("Population") +
theme(legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 20),
plot.title = element_text(hjust = 0.5, size = 20),
strip.text.x = element_text(size = 20),
legend.position = "none") +
#scale_x_continuous(breaks = round(seq(min(path_data_diff_B5$est, na.rm = TRUE), max(path_data_diff_B5$est, na.rm = TRUE), by = 0.3), 1)) +
ggtitle("m_5_3799350")
ggarrange(path_data_diff_B4_ggplot, path_data_diff_B42_ggplot, path_data_diff_B5_ggplot,
vjust = 1.1,
#hjust = c(-4.5, , -4),
labels = c("A", "B", "C"),
font.label = list(size = 30))
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/path_analysis_figures/img/")
ggsave("SAR4_SAR42_SAR5_effect_blups_comparison.png", device = "png", width = 18, height = 12)
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/path_sum_model/input/")
significant_paths <- fread("sun_shade_significant_paths.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
sun_sig_paths <- subset(significant_paths, Condition == "Sun", select = grepl("~", colnames(significant_paths)))
sun_sig_paths_sum <- apply(sun_sig_paths, 2, function(x) sum(x))
shade_sig_paths <- subset(significant_paths, Condition == "Shade", select = grepl("~", colnames(significant_paths)))
shade_sig_paths_sum <- apply(shade_sig_paths, 2, function(x) sum(x))
library(data.table)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/data/")
sar_qtl <- fread("sar_gxe_qtl_info_with_anno.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
qtl_window <- data.frame(left = as.numeric(sapply(strsplit(sar_qtl$`Left Bound`, split = "_"), function(x) x[length(x)])),
right = as.numeric(sapply(strsplit(sar_qtl$`Right Bound`, split = "_"), function(x) x[length(x)])))
qtl_window$size <- with(qtl_window, (right - left)/1000000)
qtl_window_avg_size <- mean(qtl_window$size)
library(data.table)
library(xtable)
rm(list = ls())
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/h2_table/")
fixef_h2_ci_table <- fread("trait_effects_and_h2_ci.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/h2_table/input/")
fixef_h2_ci_table <- fread("trait_effects_and_h2_ci.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
fixef_h2_ci_table_subset <- subset(fixef_h2_ci_table, select = c(1, 2, 3, 7, 8))
colnames(fixef_h2_ci_table_subset) <- c("Trait", "Shelf Fixef", "Treatment Fixef", "Geno H2", "GxE PVE")
print(xtable(fixef_h2_ci_table_subset), include.rownames=FALSE)
#this script will make a table for the G QTL found
library(data.table)
library(xtable)
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/data/")
g_qtl_list <- lapply(list.files(pattern = "geno_qtl_ci.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
g_qtl_phenotypes <- sapply(strsplit(list.files(pattern = "geno_qtl_ci.csv"), split = "_geno"), function(x) x[1])
for (i in 1:length(g_qtl_list)) {
g_qtl_list[[i]]$trait <- g_qtl_phenotypes[i]
}
g_qtl_comb <- rbindlist(g_qtl_list)
g_qtl_comb_reordered <- subset(g_qtl_comb, select = c(trait, qtl, avg_snp_pve, score, left_bound, right_bound))
colnames(g_qtl_comb_reordered) <- c("Trait", "QTL", "SNP PVE", "-log10p", "Left Bound", "Right Bound")
print(xtable(g_qtl_comb_reordered), include.rownames = FALSE)
#this script will try to make the annotated confidence interval tables look a bit better
library(data.table)
library(plyr)
library(xtable)
rm(list = ls())
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/gene_annotation/data/")
sar_gene_counts <- fread("sar_gxe_gene_counts.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
colnames(sar_gene_counts) <- c("trait", "qtl", "num_genes")
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/")
sar_gxe_qtl_list <- lapply(list.files(pattern = "gxe_qtl_ci.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
sar_gxe_qtl_pheno <- sapply(strsplit(list.files(pattern = "gxe_qtl_ci.csv"), split = "_qtl_ci"), function(x) x[1])
#labeling qtl tables with trait names
for (i in 1:length(sar_gxe_qtl_list)) {
sar_gxe_qtl_list[[i]]$trait <- sar_gxe_qtl_pheno[i]
}
setwd("/Users/James/Documents/GitHub/sar_qtl/figures/qtl_table/data/")
sar_gxe_qtl_list <- lapply(list.files(pattern = "gxe_qtl_ci.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
sar_gxe_qtl_pheno <- sapply(strsplit(list.files(pattern = "gxe_qtl_ci.csv"), split = "_qtl_ci"), function(x) x[1])
#labeling qtl tables with trait names
for (i in 1:length(sar_gxe_qtl_list)) {
sar_gxe_qtl_list[[i]]$trait <- sar_gxe_qtl_pheno[i]
}
sar_gxe_qtl_dt <- rbindlist(sar_gxe_qtl_list)
sar_gene_counts$trait <- paste(sar_gene_counts$trait, "gxe", sep = "_")
sar_gxe_qtl_dt_with_anno <- merge(sar_gxe_qtl_dt, sar_gene_counts, by = c("trait", "qtl"))
sar_gxe_qtl_dt_with_anno_subset <- subset(sar_gxe_qtl_dt_with_anno, select = c(trait, qtl, avg_snp_pve, score, left_bound, right_bound, num_genes))
sar_gxe_qtl_dt_with_anno_subset[is.na(sar_gxe_qtl_dt_with_anno_subset$num_genes), ]$num_genes  <- 0
colnames(sar_gxe_qtl_dt_with_anno_subset) <- c("Trait", "QTL", "SNP PVE", "-log10(p)", "Left Bound", "Right Bound", "# Annotated Genes")
install.packages("tsoutliers")
library(tsoutliers)
Nile
install.packages("TSA")
library(TSA)
