SE_est = sqrt(2*pooled_var/5)
SE_est
df = 6 * (5-1)
tc = qt(.05/2,df,lower.tail = FALSE)
dif = 108 - 69
CI = dif + c(-tc*SE_est, tc*SE_est)
CI
mean_A =108
mean_B =69
mean_C = 65
mean_D = 124
mean_E = 30
mean_F = 102
difference <- mean_A - mean_B
difference
var_A = 20
var_B = 22
var_C = 17
var_D = 16
var_E = 25
var_F = 21
pooled_var <- (var_A + var_B + var_C + var_D + var_E + var_F)/6
SED <- sqrt(pooled_var/(10/2))
SED
mean_A
mean_B
mean_C
mean_D
mean_F
difference
var_A
var_B
var_C
var_D
var_E
var_F
pooled_var
SED
SED <- sqrt(pooled_var/(5/2))
SED
SED
pooled_var <- mean(var_A^2 + var_B^2 + var_C^2 + var_D^2 + var_E^2 + var_F^2)
pooled_var
var_A^2 + var_B^2 + var_C^2 + var_D^2 + var_E^2 + var_F^2
pooled_var <- mean(var_A^2 + var_B^2 + var_C^2 + var_D^2 + var_E^2 + var_F^2)
pooled_var
pooled_var <- (var_A^2 + var_B^2 + var_C^2 + var_D^2 + var_E^2 + var_F^2)/6
pooled_var
SED <- sqrt(pooled_var/(10/2))
SED
library(emmeans)
sixtest_SED <- sqrt(pooled_var/(30/6))
sixtest_SED
sixtest_SED =2.008316
c_q = qtukey(p = 0.05,nmeans = 6,df = 24,lower.tail = F) / sqrt(2)
MSD = SED * c_q
MSD
bird_means = c(mean_A, mean_B, mean_C, mean_D, mean_E, mean_F)
bird_SE = c(var_A, var_B, var_C, var_D, var_E, var_F)
data = data.frame(bird_means,bird_SE, row.names=c('A', 'B',' C', 'D', 'E', 'F'))
data
bird.data <- read.csv("bird.book.csv")
sixtest_SED
c_q
c_q = qtukey(p = 0.95,nmeans = 6,df = 24,lower.tail = F) / sqrt(2)
MSD = SED * c_q
MSD
c_q = qtukey(p = 0.05,nmeans = 6,df = 24,lower.tail = F) / sqrt(2)
c_q
c_q = qtukey(p = 0.95,nmeans = 6,df = 24,lower.tail = F) / sqrt(2)
c_q
sixtest_SED <- sqrt(pooled_var/(30/6))
sixtest_SED
sixtest_SED =2.008316
c_q = qtukey(p = 0.95,nmeans = 6,df = 24,lower.tail = F) / sqrt(2)
MSD = SED * c_q
MSD
bird_means = c(mean_A, mean_B, mean_C, mean_D, mean_E, mean_F)
bird_SE = c(var_A, var_B, var_C, var_D, var_E, var_F)
bird_SE
data = data.frame(bird_means,bird_SE, row.names=c('A', 'B',' C', 'D', 'E', 'F'))
data
MSD
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table <- student_table[order(student_table$means), ]
student_table
pooled_var <- (20^2+22^2+17^2+16^2+25^2+21^2)/6
SED <- sqrt((pooled_var/5)+(pooled_var/5))
pooled_var
SED
difference <- (108-69)
tc <- qt(.05/2, df=2*(5-1), lower.tail = F)
CI <- c(difference - tc * SED, difference + tc * SED)
tc
CI
LSD <- (SED * 3.09)
LSD
differences_e <- c((30-65),(30-69),(30-102))
differences_e
differences_c <- c((65-69),(65-102),(65-108))
differences_c
differences_b <- c((69-102),(69-108),(69-124))
differences_b
differences_f <- c((102-108),(102-124))
differences_f
differences_a <- c((108-124))
differences_a
dif_A_B
dif_se <- ((20/sqrt(5))-(22/sqrt(5)))
dif_se
pooled_var <- (108 + 69 + 65 + 124 + 30 + 102)/6
pooled_var
SED <- sqrt(pooled_var/(16/2))
SED
tc = qt(0.05,df = 5*(15-1),lower.tail=F)
c(dif_se -tc * SED, dif_se + tc*SED) + 39
pooled_var1.1 = sqrt( (4*(20*20) +
4*(22*22) +
4*(17*17) +
4*(16*16) +
4*(25*25) +
4*(21*21)) / 24)
answer1.1 = sqrt((pooled_var1.1/5) + (pooled_var1.1/5))
answer1.1
pooled_var1.1
pooled_var1.1 = sqrt( (4*(20*20) +
4*(22*22) +
4*(17*17) +
4*(16*16) +
4*(25*25) +
4*(21*21)) / 24)
answer1.1 = sqrt((pooled_var1.1/5) + (pooled_var1.1/5))
answer1.1
MSD1.4 = 3.09 * answer1.1
MSD1.4
answer1.1
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD1.4)
student_table <- student_table[order(student_table$means), ]
student_table
mean_diff <- abs(108-69)
mean_diff
t_crit <- qt(p = 1-(0.5/2), df = 8, lower.tail = TRUE)
t_crit
CI_diff <- c(mean_diff - t_crit*se_diff, mean_diff + t_crit*se_diff)
CI_diff
n = 5
pooled_var <- (20^2+22^2+17^2+16^2+25^2+21^2)/n
pooled_var
se_diff <- sqrt(pooled_var/n)*2
se_diff
n = 5
pooled_var <- (20^2+22^2+17^2+16^2+25^2+21^2)/n
pooled_var
se_diff <- sqrt(pooled_var/n)*2
se_diff
mean_diff <- abs(108-69)
mean_diff
t_crit <- qt(p = 1-(0.5/2), df = 8, lower.tail = TRUE)
t_crit
CI_diff <- c(mean_diff - t_crit*se_diff, mean_diff + t_crit*se_diff)
CI_diff
t_crit
t_c = qt(1-(1-.95)/2,DfE)
# The interval is delta +/- SED * t_c
# Df = total Df from experiment = t*(n-1)
DfE = 6*(5-1)
t_c = qt(1-(1-.95)/2,DfE)
t_c
?qt
t_crit <- qt(p = (1-0.5/2), df = 8, lower.tail = TRUE)
t_crit
n = 5
pooled_var <- (20^2+22^2+17^2+16^2+25^2+21^2)/n
pooled_var
se_diff <- sqrt(pooled_var/n)*2
se_diff
mean_diff <- abs(108-69)
mean_diff
t_crit <- qt(p = 1-0.5/2, df = 8, lower.tail = TRUE)
t_crit
CI_diff <- c(mean_diff - t_crit*se_diff, mean_diff + t_crit*se_diff)
CI_diff
se_diff
MSD = 3.09 * se_diff
MSD #61.74
30 + MSD #30 - 91.74, a
65 + MSD #65 - 126.74, b
MSD
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table <- student_table[order(student_table$means), ]
student_table
var_A = (20)^2
var_B = (22)^2
var_C = (17)^2
var_D = (16)^2
var_E = (25)^2
var_F = (21)^2
pooled_var = (var_A + var_B + var_C + var_D + var_E + var_F) /6
SED = sqrt (pooled_var / (5/2))
print(pooled_var)
print(SED)
difference = 108-69
tc = qt(0.05/2, df = 2* (5-1), lower.tail =F) # 5=sample size
c(difference - tc * SED, difference + tc * SED) # this is student t-test
# using Tukey method
q =1.77
w =q * sqrt(pooled_var/5)  # use 5 instead of 5/2 b/c Tukey already incluing 2 in q
print (w)
# using Tukey method
q =1.77
w =q * sqrt(pooled_var/5)  # use 5 instead of 5/2 b/c Tukey already incluing 2 in q
print (w)
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + w)
student_table <- student_table[order(student_table$means), ]
student_table
variances <- c (20,22,17,16,25,21)^2
pooled_var <- mean (variances)
SED <- sqrt (2*pooled_var/5)
SED
tc = qt(0.05/2,df = 6*(5-1),lower.tail=F)
difference = 108-69
CI = c(difference - tc * SED, difference + tc * SED)
CI
birds_sd_between_a_b=sqrt((20^2/5)+(22^2/5))
birds_sd_between_a_b
alpha = 0.05
birds_n_a=5
birds_n_b=5
birds_difference_between_a_b=108-69
t_critical = qt(p = alpha/2,df = 8)
CI=birds_sd_between_a_b*t_critical
confidence_interval_birds_between_a_b=c(birds_difference_between_a_b+CI,birds_difference_between_a_b-CI)
confidence_interval_birds_between_a_b
A_mean=108
A_sd=20
B_mean=69
B_sd=22
C_mean=65
C_sd=17
D_mean=124
D_sd=16
E_mean=30
E_sd=25
F_mean=102
F_sd=21
birds_n_a=5
birds_n_b=5
birds_n_c=5
birds_n_d=5
birds_n_e=5
birds_n_f=5
t_a_b=(A_mean - B_mean) / sqrt((A_sd^2/birds_n_a)+(B_sd^2/birds_n_b))
t_a_c=(A_mean - C_mean) / sqrt((A_sd^2/birds_n_a)+(C_sd^2/birds_n_c))
t_a_d=(A_mean - D_mean) / sqrt((A_sd^2/birds_n_a)+(D_sd^2/birds_n_d))
t_a_e=(A_mean - E_mean) / sqrt((A_sd^2/birds_n_a)+(E_sd^2/birds_n_e))
t_a_f=(A_mean - F_mean) / sqrt((A_sd^2/birds_n_a)+(F_sd^2/birds_n_f))
t_b_c=(B_mean - C_mean) / sqrt((B_sd^2/birds_n_b)+(C_sd^2/birds_n_c))
t_b_d=(B_mean - D_mean) / sqrt((B_sd^2/birds_n_b)+(D_sd^2/birds_n_d))
t_b_e=(B_mean - E_mean) / sqrt((B_sd^2/birds_n_b)+(E_sd^2/birds_n_e))
t_b_f=(B_mean - F_mean) / sqrt((B_sd^2/birds_n_b)+(F_sd^2/birds_n_f))
t_c_d=(C_mean - D_mean) / sqrt((C_sd^2/birds_n_c)+(D_sd^2/birds_n_d))
t_c_e=(C_mean - E_mean) / sqrt((C_sd^2/birds_n_c)+(E_sd^2/birds_n_e))
t_c_f=(C_mean - F_mean) / sqrt((C_sd^2/birds_n_c)+(F_sd^2/birds_n_f))
t_d_e=(D_mean - E_mean) / sqrt((D_sd^2/birds_n_d)+(E_sd^2/birds_n_e))
t_d_f=(D_mean - F_mean) / sqrt((D_sd^2/birds_n_d)+(F_sd^2/birds_n_f))
t_e_f=(E_mean - F_mean) / sqrt((E_sd^2/birds_n_e)+(F_sd^2/birds_n_f))
t_a_b
t_a_c
t_a_d
t_a_e
t_a_f
t_b_c
t_b_d
t_b_e
t_b_f
t_c_d
t_c_e
t_c_f
t_d_e
t_d_f
t_e_f
#finding the difference
mean_A <- 108
mean_B <- 69
difference <- mean_A - mean_B
difference
#Pooled from whole experiment:
pooled = sqrt((20^2 + 22^2) + 17^2 + 16^2 + 25^2 + 21^2/5)
pooled
SED = sqrt((pooled/4) + (pooled/4)) #4 is df
SED
#computing mean and standard error
CI = SED/sqrt(difference)
CI
#lower limit
39 - (1.96)(0.7703138)
CI
CI
CI
MSD = SED*3.09
MSD #14.86478
#finding the difference
mean_A <- 108
mean_B <- 69
difference <- mean_A - mean_B
difference
#Pooled from whole experiment:
pooled = sqrt((20^2 + 22^2) + 17^2 + 16^2 + 25^2 + 21^2/5)
pooled
SED = sqrt((pooled/4) + (pooled/4)) #4 is df
SED
#computing mean and standard error
CI = SED/sqrt(difference)
#lower limit
39 - (1.96)(0.7703138)
MSD = SED*3.09
MSD #14.86478
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table
student_table <- student_table[order(student_table$means), ]
student_table
rm(list = ls())
sed <- sqrt(((20^2+22^2)/2)/(5/2))
sed
mean_diff = 108 - 69
tc <- qt(0.05/2,df = 6*(5-1),lower.tail=F)
c(mean_diff -tc * sed, mean_diff + tc*sed)
c_q = 3.09
MSD = c_q * sed
bird <- c("A","B","C","D","E","F")
number <- c(108,64,65,124,30,102)
NumMSD <- (number + MSD)
table <- data.frame(bird, number, NumMSD) %>%
arrange(number)
abc <- c('a', 'ab', 'ab', 'bc', 'c', 'c')
cldtable <- data.frame(table, abc)
cldtable
# To do this, we must calculate the minimum difference in means that we will declare significant.
# This is equivalent to saying what difference will have one side of it's confidence interval (SE*t_c) equal zero.
CI_side = SED * 3.09
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table <- student_table[order(student_table$means), ]
student_table
c_q = 3.09
MSD = c_q * sed
bird <- c("A","B","C","D","E","F")
number <- c(108,64,65,124,30,102)
NumMSD <- (number + MSD)
table <- data.frame(bird, number, NumMSD) %>%
arrange(number)
abc <- c('a', 'ab', 'ab', 'bc', 'c', 'c')
cldtable <- data.frame(table, abc)
cldtable
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
group_means <- c(108, 69, 65, 124, 30, 102)
group_means <- c(108, 69, 65, 124, 30, 102)
c_q = 3.09
MSD = c_q * sed
bird <- c("A","B","C","D","E","F")
number <- c(108,64,65,124,30,102)
NumMSD <- (number + MSD)
table <- data.frame(bird, number, NumMSD) %>%
arrange(number)
abc <- c('a', 'ab', 'ab', 'bc', 'c', 'c')
cldtable <- data.frame(table, abc)
cldtable
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table <- student_table[order(student_table$means), ]
student_table
MSD
sed
c_q = 3.09
MSD = c_q * sed
bird <- c("A","B","C","D","E","F")
number <- c(108,64,65,124,30,102)
NumMSD <- (number + MSD)
table <- data.frame(bird, number, NumMSD) %>%
arrange(number)
abc <- c('a', 'ab', 'ab', 'bc', 'c', 'c')
cldtable <- data.frame(table, abc)
cldtable
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table <- student_table[order(student_table$means), ]
student_table
c_q = 3.09
MSD = c_q * sed
bird <- c("A","B","C","D","E","F")
number <- c(108,64,65,124,30,102)
NumMSD <- (number + MSD)
table <- data.frame(bird, number, NumMSD) %>%
arrange(number)
abc <- c('a', 'ab', 'ab', 'bc', 'c', 'c')
cldtable <- data.frame(table, abc)
cldtable
pool.var1 <- (20^2 + 22^2 + 17^2 + 16^2 + 25^2 + 21^2)/6
pool.var1
varA <- 20^2
varB <- 22^2
SED <- sqrt(varA/5 + varB/5)
SED
SED_pool <- sqrt(pool.var1/(5/2))
SED_pool
tc1 <- qt(0.05/2, df= 2*(5-1), lower.tail=F)
tc1
diff1<- 108-69
diff1
interval <- c( diff1+ (tc1*SED_pool) , diff1- (tc1*SED_pool))
interval
MSD1 <- 1.77 * SED_pool
MSD1
means1 <- c(108,69,65,124,30,102)
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD)
student_table <- student_table[order(student_table$means), ]
student_table
student_table <- data.frame(groups = LETTERS[1:6], means = group_means, limit = group_means + MSD1)
student_table <- student_table[order(student_table$means), ]
student_table
pooled.var <- (sum(20^2+22^2+17^2+16^2+25^2+21^2)/6)
SEd <- sqrt((pooled.var/5)+(pooled.var/5))
SEd
test <- c(6, 2, 2, 2, 4, 6, 5, 5, 1, 1, 2, 3, 5, 5, 8, 1, 1, 1, 1, 0, 8, 8, 6, 2, 3, 2)
sum(test)
test <- c(6, 2, 2, 2, 4, 6, 5, 5, 1, 1, 2, 3, 5, 5, 8, 1, 1, 1, 1, 0, 6, 6, 4, 1, 2, 2)
sum(test)
test <- c(6, 2, 2, 2, 4, 6, 5, 5, 1, 1, 2, 3, 5, 5, 8, 1, 1, 1, 1, 0, 6, 6, 4, 1, 2)
sum(test)
test <- c(6, 2, 2, 2, 4, 6, 5, 5, 1, 1, 2, 3, 5, 5, 8, 1, 1, 1, 1, 0, 6, 6, 4, 1, 2)
sum(test)
#this script will use the jicim method to find qtl for my traits
devtools::install_github('deruncie/GxEMMA',auth_token="c5d555b7329f8f261f0904cd031142c8a7ce7f52")
#this script will use the jicim method to find qtl for my traits
devtools::install_github('deruncie/GxEMMA',auth_token="c5d555b7329f8f261f0904cd031142c8a7ce7f52")
update.packages(ask = FALSE)
devtools::install_github('deruncie/GridLMM', build_vignettes = TRUE)
install.packages("devtools")
devtools::install_github('deruncie/GridLMM', build_vignettes = TRUE)
vignette(topic = 'Running_GridLMM_GWAS',package='GridLMM')
library(GridLMM)
vignette(topic = 'Running_GridLMM_GWAS',package='GridLMM')
vignette(topic = 'Running_GridLMM_GWAS',package='GridLMM')
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(lme4)
library(lmerTest)
install.packages("lmerTest")
library(lmerTest)
library(parallel)
library(data.table)
library(lme4qtl)
library(devtools)
install_github("variani/lme4qtl")
library(qtl)
install.packages("qtl")
library(qtl)
library(pryr)
install.packages("pryr")
library(GridLMM)
library(ggplot2)
library(foreach)
library(doParallel)
```devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"))
devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"))
devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
install.packages("knitr")
devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
install.packages("KRLS")
devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
install.packages("qqman")
devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("snpStats", version = "3.8")
devtools::install_github('deruncie/GridLMM', build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
vignette(topic = 'Running_GridLMM_GWAS',package='GridLMM')
library(data.table)
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/h2_table/")
library(xtable)
rm(list = ls())
fixef_h2_ci_table <- fread("trait_effects_and_h2_ci.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE)
fixef_h2_ci_table
fixef_h2_ci_table_subset <- subset(fixef_h2_ci_table, select = c(2, 3, 7, 8))
fixef_h2_ci_table_subset
fixef_h2_ci_table_subset <- subset(fixef_h2_ci_table, select = c(1, 2, 3, 7, 8))
fixef_h2_ci_table_subset
colnames(fixef_h2_ci_table_subset) <- c("Trait", "Shelf Fixef", "Treatment Fixef", "Geno H2", "GxE PVE")
print(xtable(fixef_h2_ci_table_subset))
print(xtable(fixef_h2_ci_table_subset), include.rownames=FALSE)
setwd("/Users/jkhta/Documents/GitHub/sar_qtl/figures/qtl_table/")
#this script will make a table for the G QTL found
library(data.table)
library(xtable)
g_qtl_list <- lapply(list.files(pattern = "geno_qtl_ci.csv") function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
g_qtl_list <- lapply(list.files(pattern = "geno_qtl_ci.csv"), function(x) fread(x, sep = ",", header = TRUE, stringsAsFactors = FALSE))
g_qtl_list
g_qtl_phenotypes <- sapply(strsplit(list.files(pattern = "geno_qtl_ci.csv"), split = "_gxe"), function(x) x[1])
strsplit(list.files(pattern = "geno_qtl_ci.csv"), split = "_gxe")
list.files(pattern = "geno_qtl_ci.csv")
g_qtl_phenotypes <- sapply(strsplit(list.files(pattern = "geno_qtl_ci.csv"), split = "_geno"), function(x) x[1])
for (i in 1:length(g_qtl_list)) {
g_qtl_list[[i]]$trait <- g_qtl_phenotypes[i]
}
g_qtl_list
g_qtl_comb <- rbindlist(g_qtl_list)
g_qtl_comb
g_qtl_comb_reordered <- subset(g_qtl_comb, select = c(trait, qtl, avg_snp_pve, score, left_bound, right_bound))
g_qtl_comb_reordered
colnames(g_qtl_comb_reordered) <- c("Trait", "QTL", "SNP PVE", "-log10p", "Left Bound", "Right Bound")
print(xtable(g_qtl_comb_reordered), include.rownames = FALSE)
